[{"path":"https://aquametrics.github.io/rict/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://aquametrics.github.io/rict/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"How to Contribute Code","title":"How to Contribute Code","text":"👍🎉 Hello warm welcome guidelines contributing code! 🎉👍 Thanks taking time read guidelines. helps keep code repository easy maintain code easy follow. mostly guidelines, rules. Use best judgment, feel free propose changes document pull request.","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/CONTRIBUTING.html","id":"open-issue","dir":"","previous_headings":"Most changes to code should follow this route:","what":"Open Issue","title":"How to Contribute Code","text":"Sign-Github. Open issue describe update planning address. ’s usually helpful include worked example feature update issue. maintainer, wait feedback comments - maybe different approaches need exploring.","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/CONTRIBUTING.html","id":"via-the-cloud---quick-and-easy","dir":"","previous_headings":"Install Software","what":"Via the “Cloud” - Quick and Easy!","title":"How to Contribute Code","text":"Go https://github.com/aquaMetrics/rict click ‘fork’ top right. Sign-R Studio Cloud. Click New Project dropdown menu select ‘New Project Git repo’. Paste https://github.com/-GITHUB-USERNAME/rict. - replace -GITHUB-USERNAME navigate forked repo profile copy paste URL. Next install package dependencies. Console panel type: install.packages(\"devtools\") devtools::install_dev_deps() enter 1 install latest versions. can now make changes files - look ‘Files’ tab look ‘R’ folder R code held. Add browser() line wish add breakpoint code/function. Build tab select ‘Install Build’. Now run function, try typing console: rict(observed_demo_values) - run functions package. code break added browser() can investigate values see needs changing etc. Make changes required ‘Install Restart’. happy code, go ‘Commit’ section . Note, updated documentation, run pkgdown::build_site() console, update package website changes merged: https://aquametrics.github.io/rict/.","code":""},{"path":"https://aquametrics.github.io/rict/CONTRIBUTING.html","id":"via-local-machine","dir":"","previous_headings":"Install Software","what":"Via Local Machine","title":"How to Contribute Code","text":"Install Git machine. Install R. Install Rstudio - recommended - editors available. Click New Project dropdown menu select ‘New Project Git repo’. Follow instructions ‘Via Cloud’ section number 5.","code":""},{"path":"https://aquametrics.github.io/rict/CONTRIBUTING.html","id":"commit","dir":"","previous_headings":"Install Software","what":"Commit","title":"How to Contribute Code","text":"step needed first commit, select Terminal panel (lower left) type:git config --global user.email \".email@address.co.uk\"git config --global user.name \"YOUR_GITHUB_USERNAME\" (changing email username match ) ‘Git’ panel (top-right) commit select files changed click commit. Add commit message (applicable, includes reference issue number e.g. ‘docs: closes #1’- ‘#1’ issue number) sure write commit message? Try use commit message guidance, although enforced. Select ‘Push’ changes.","code":""},{"path":"https://aquametrics.github.io/rict/CONTRIBUTING.html","id":"create-pull-request","dir":"","previous_headings":"","what":"Create Pull Request","title":"How to Contribute Code","text":"github profile page select forked rict repo. now include recent changes made. Near top option create pull request (PR). Select create pull request enter message reference issue number ‘#1’ fixes. PR submitted testing automatically run. Wait response maintainers.","code":""},{"path":"https://aquametrics.github.io/rict/CONTRIBUTING.html","id":"deploying","dir":"","previous_headings":"","what":"Deploying","title":"How to Contribute Code","text":"Github actions automatically update deploy changes package, docs web app long automated tests pass: , PR merged master branch, automatic tests builds run “cloud”. tests check code problems compatibility running Windows, Linux Mac. README document (displayed repo github) ‘build’ badge icons - indicate tests running correctly cloud. first build badge:  links Github actions page Click icon see details automated testing.","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/CONTRIBUTING.html","id":"notes-on-coding-style--testing","dir":"","previous_headings":"Deploying","what":"Notes on Coding Style & Testing","title":"How to Contribute Code","text":"Add comments required explain rather . every line needs comments - large unusual sections. R Package guidance useful resource writing packages. Linting / styling code enforced easy . Install styler package. Run styler ‘Addins’ menu. Testing allows check coding ‘style’ rules lintr package. linting/style enforced (failures okay desired). Document code follow standard CRAN checks file structure devtools::check(). Run tests locally - commit devtools::test(). See .lintr file exact linting rules applied testing.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://aquametrics.github.io/rict/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2019 Environment Agency  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. rict Copyright (C) 2019 Environment Agency This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"purpose-of-the-document","dir":"Articles","previous_headings":"1 Introduction","what":"Purpose of the document","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"purpose document define business, functional non-functional capabilities RICT support design implementation RICT software tool. details sufficient enable software tool designed built without continually refer queries business representatives. , sufficient detail provide supporting documented information future RICT development.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"background","dir":"Articles","previous_headings":"1 Introduction","what":"Background","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"UK Regulatory Agencies requirement classify ecological quality rivers using data invertebrate samples. RIVPACS (River InVertebrate Prediction Classification System) model software tool, developed behalf agencies Freshwater Biological Association (FBA) subsequently Centre Ecology Hydrology (CEH), originally used purpose. incorporates set summarised reference data sites assumed best available type. EU Water Framework Directive (WFD) introduced 2000, included modifications regulatory requirements relation classification therefore RIVPACS software processing tool amended. original RIVPACS software tool written FORTRAN developed stages number years. result, written modern programming language flexibility allow changes without significant cost. Therefore, new tool developed allowed future changes made minimal cost many cases (e.g. addition new index). River Invertebrate Classification Tool (RICT) version 1 went live 2007. version RICT web-served application accessed via website hosted SEPA. SEPA website also hosted copies manual, guidance background documents. RICT updates since 2007, including addition ‘split season’ classification enable WHPT (Walley, Hawkes, Paisley Trigg) calculations using seasonal average EQRs (Ecological Quality Ratio). RICT managed hosted Scottish Environment Protection Agency (SEPA) also used Environment Agency (EA), Natural Resources Wales (NRW) Northern Ireland Environment Agency (NIEA) part regulatory statutory requirements well public users academic institutions. However, number issues identified version RICT can found outline business case produced scoping project. include improving performance, support arrangements resilience well adding new RIVPACS model (RIVPACS version IV) RICT tool, resolving critical bugs additional functionality. full list Critical success factors can found Annex C. shortlist options resolve issues discussed resulted recommendation RICT adopt Platform Service arrangement run modified application. new cloud-based open source version RICT developed incorporated current RIVPACS IV model WFD status classification uses basic algorithms provide final results (correction errors). Code data tables new version accessible developers wish develop RICT. new version RICT called RICT version 2 (RICT2). platform chosen RICT2 Microsoft Azure Machine Learning (ML) Studio open source R programming language. Due Azure closing service, platform moved ‘Shiny’ web server hosted Posit. version called RICT version 3 (RICT3). code moved R package Github. Advanced users can create version R code run R package locally machines. RICT web app latest documentation including technical specification user guide via RICT web app.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"functional-overview","dir":"Articles","previous_headings":"","what":"Functional Overview","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"RICT application implements RIVPACS IV predictive model. primary requirement tool allocate WFD (Water Framework Directive) compliant classifications rivers regard quality river invertebrate community. classifications calculated described H() = high, G = good, M = moderate, P = poor B = bad. achieved comparing sample data river site sample data previously taken river sites considered best available type. primary functions RICT tool : Predict - Predict value various biotic indices presence abundance invertebrate species, genera families expect place stream river UK environmentally disturbed. Classify - Determine Water Framework Directive (WFD) quality status class statistical information confidence. Compare - Compare statistical significance differences classifications. capable one sites time, results provided output file subsequent processing relevant user. diagram shows diagrammatical representation main functionality RICT tool numbered links detailed information.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"supporting-files","dir":"Articles","previous_headings":"","what":"Supporting files","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"RICT uses RIVPACS reference data contain sites considered best available type. latest version complete RIVPACS reference database RICT can downloaded RICT Website: https://fba.org.uk/FBA/Public/Discover--Learn/Projects/RIVPACS-Reference-Sites--Reports.aspx Within RICT, RIVPACS reference data used site level used End Group level, End Group contains combined data sites considered similar biological composition. End Groups grouped End Group Sets (e.g. New GB – 43 Group level). well data table, RICT needs data held used internal data tables R software code functions. following files can found within rict package github. rict code automatically tested compiled/built every update master branch Github. process carried Github actions website, monitors repo changes re-builds tests code Windows, Mac Linux machine cloud. automatically deploys updates web app /documentation.","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"support-tables","dir":"Articles","previous_headings":"3 Supporting files > 3.1 Prediction","what":"Support Tables:","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"files can found inst/extdat folder within rict package. Model 1 specific: df-coeff-gb-685.DAT – used Discriminant score. df-mean-gb-685.DAT - used calculating Mahanalobis distance. Model 44 specific: discrimintant-function-coefficient-model-44.csv - used discriminant score. discrimantinant-function-model-44.csv file used calculating Mahanalobis distance. models: air-temp-grid.csv – contains previously derived Environmental data values Mean Air Temperature (TEMPM) Temperature range (TEMPR) points centres 5km interval grid squares. Values used converting supplied NGR (BNR) latitude longitude identify relevant values required. end-grp-assess-scores.csv used calculating proportion prediction. TAXA_AB_APR_PRAB.csv - containing abundance probability abundance category taxon used predicting taxa. x-103-end-group-means-formatted-jdb-17-dec-2019.csv – combined data sites considered similar biological composition End Group table used RICT called","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"prediction-functions","dir":"Articles","previous_headings":"3 Supporting files > 3.1 Prediction","what":"Prediction Functions:","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Found /R package directory two main R functions files predictions: rict-predict.R - main function called run predictionrict-validate.R - lower level function validate input data helper-functions.R - support functions carry Environmental Variables validation Prediction support functions found: prediction-functions.Rcalc_temperatures.R","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"files-supporting","dir":"Articles","previous_headings":"3 Supporting files > 3.2 Classification","what":"Files Supporting:","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"adjustParams_ntaxa_aspt.csv - reference adjustment values. EndGrp_AssessScores.csv - Excel csv used adjusting expected values classification calculating proportion. Note, classification carried 80 indices – carried Prediction ! list tables functions required NI model : DFCOEFF_NI.DAT file used Discriminant score described section 7.5 document. DFMEAN_NI_RALPH.DAT file used calculating Mahanalobis distance described section 7.6 document.j EndGrp_AssessScores.csv file used calculating proportion prediction.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"classification-functions","dir":"Articles","previous_headings":"3 Supporting files > 3.2 Classification","what":"Classification Functions:","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"classification-functions.R - large number R code functions used prediction process described Section 8.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"classification-support-files","dir":"Articles","previous_headings":"3 Supporting files > 3.2 Classification","what":"Classification support files:","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"adjustParams_ntaxa_aspt.csv containing reference adjustment values used described Section 8.2. EndGrp_AssessScoresNI.csv used adjusting expected values classification described Section 8.2. source code support files can downloaded R environment example Rstudio Github users wish amend create versions.","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"default-values","dir":"Articles","previous_headings":"4 RICT","what":"Default values","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"list describes default values used: Number Monte-Carlo simulations – 10,000 Index sets – 80 indices Season type – Spring, Autumn, Spring/Autumn Combined, Summer Classification boundary limits – Coded per WFD compliant values found classification support files (user need amend function file alter values version) Bias - Bias values can provided input file user used provided. However, data values Bias “-9” entered input file, hard-coded default value 1.62 (GB) 0 (NI) used. Note 1.62 default value currently used Bias input default value previous version RICT used SEPA BMWP NTAXA. However, EA uses value 1.68 Bias value WHPT based audit analytical quality Environment Agency laboratories. Bias value WHPT greater value BMWP level analytical quality, WHPT uses taxa BMWP. Plus WHPT taxa also includes additional Diptera families less easy identify.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"future-developments","dir":"Articles","previous_headings":"4 RICT","what":"Future Developments","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"multi-site classification added enable water bodies classified one site. GIS data location checker delivery system multi-site classification currently development hope release couple months. Additional standard default calculate output specific Index sets (e.g. hydro-ecological evaluation) may added later, need arises. Future RICT release may allow user run predictions classifications previous classifications RIVPACS models allow historical data analysed consistent way current monitoring data. may include BMWP (Biological Monitoring Working Party) classification based RIVPACS IV (used 2015) RIVPACS III+ (used 1990-1009), using WHPT based BMWP taxa including BMWP composite taxa. may correct improve features, need , run testing add document user guides, appropriate.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"acceptance-and-validation-of-input-data","dir":"Articles","previous_headings":"","what":"Acceptance and validation of input data","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"order able predict classify, tool requires input data one csv file includes: Site Identifier Values number Environmental Variables (e.g. NGR, slope, discharge, etc.) Values number Observed Tool Indices (e.g. ASPT, NTAXA, etc.) (required classification) excel spreadsheet template provided user enter input data relevant column headings. Validation rules applied data input column help user meet validation requirements detailed . input data spreadsheet template can found Annex document. completed, spreadsheet need saved csv format uploaded user.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"environmental-variable-values-and-validation","dir":"Articles","previous_headings":"5 Acceptance and validation of input data","what":"Environmental Variable Values and Validation","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Environmental Variables (EV) needed enable prediction process calculate probability end group membership. values Environmental Variables provided input user. values Environmental Variables derived using values one provided Environmental Variables converted. complete set input derived Environmental Variables used RICT called Predictive Environmental Variables (PEVs). tables refers Environmental Variable data required data field validation RIVPACS IV Great Britain Northern Ireland Model M1 additionally model M44. M1 model requires input 13 PEVs Great Britain 11 PEVs Northern Ireland. M44 model required 17 PEVs. Input file screening carried using rules described tables user enters data input file spreadsheet. done conditional formatting tool within MS Excel ribbon check highlight user data meet validation requirements. highlight failures red warnings orange. However, stop user supplying data RICT processing. RICT processes data, appropriate Fail Warn errors generated described . Validation also coded RICT validation value ranges, .e. “”, “gb” “ni”. Note least one set following data required site may three sets data ‘raw’ data provided three years multi-year classification.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"input-variables","dir":"Articles","previous_headings":"5 Acceptance and validation of input data > 5.1 Environmental Variable Values and Validation","what":"Input variables","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"input variables well validation rules listed validation-rules.csv file within package. tables generated file.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"model-1-user-input-file","dir":"Articles","previous_headings":"5 Acceptance and validation of input data > 5.1 Environmental Variable Values and Validation","what":"Model 1 User input file","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Required values (including using physical predictors) :","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"model-44-input-files-using-gis-predictors","dir":"Articles","previous_headings":"5 Acceptance and validation of input data > 5.1 Environmental Variable Values and Validation","what":"Model 44 Input files (using GIS predictors)","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Required values:","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"optional-values","dir":"Articles","previous_headings":"5 Acceptance and validation of input data > 5.1 Environmental Variable Values and Validation","what":"Optional values","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Columns containing optional values must still present input data file values may missing (data type NA). However, must comply following notes:","code":""},{"path":[]},{"path":[]},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"validation","dir":"Articles","previous_headings":"5 Acceptance and validation of input data > 5.1 Environmental Variable Values and Validation","what":"Validation","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Warnings: value environmental input variable exceeds “Warn” limit, prediction process continue warning message created particular site. Fails: value environmental input variable exceeds “Fail” limit, prediction process proceed particular site flags transgression fail message.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"validation-rules-for-model-1","dir":"Articles","previous_headings":"5 Acceptance and validation of input data > 5.1 Environmental Variable Values and Validation","what":"Validation rules for Model 1","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Model 1 Validation notes:","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"validation-rules-for-model-44","dir":"Articles","previous_headings":"5 Acceptance and validation of input data > 5.1 Environmental Variable Values and Validation","what":"Validation rules for Model 44","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Model 44 validation notes:","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"replacement-values","dir":"Articles","previous_headings":"5 Acceptance and validation of input data > 5.1 Environmental Variable Values and Validation","what":"Replacement values","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"values provided zero (close zero) replaced avoid divide zero errors. Specifically, variables used RIVPACS model discriminator functions log form (take logs zeroes):","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"validation-rules","dir":"Articles","previous_headings":"5 Acceptance and validation of input data > 5.1 Environmental Variable Values and Validation","what":"Validation rules","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"min/max validation rules stores validation-rules.csv. can updated new min/max validation required. complex validation rules example checking presence optional columns hard-coded rict_validation() function.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"environmental-variables-validation-process","dir":"Articles","previous_headings":"5 Acceptance and validation of input data > 5.1 Environmental Variable Values and Validation","what":"Environmental Variables Validation Process","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"initial validation done user (recommended) enters data input spreadsheet: Spreadsheet validation carried check Environmental Values present correct format user enters data. user inputs values RICT software carries validation: columns missing data imported RICT program fails. Check ‘Overall’ Valid Max/Min Values Check provided EV value greater equal ‘overall’ minimum value less equal ‘overall’ maximum value defined Environmental Variable parameter table . Within RICT code, values meet validation criteria site flagged failure particular site removed run. fail limits based minimum maximum values likely GB NI. Values exceeding limits must wrong. Check ‘Warning’ Max/Min Values Check provided EV value greater equal ‘warning’ minimum value less equal ‘warning’ maximum value defined Environmental Variable parameter table . , recorded can flagged ‘warning’ output file software proceed normal. warning limits minimum maximum values variables RIVPACS reference database reference sites included RIVPACS IV GB NI. Exceedences indicate site beyond scope model may cause poor suitability indicate errors. Exceeding longitude latitude less serious exceeding parameters.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"observed-biological-data-values-and-validation","dir":"Articles","previous_headings":"5 Acceptance and validation of input data","what":"Observed Biological Data Values and Validation","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Biological data needed enable classification process. values Biological data provided user. table refers data items required data field validation RIVPACS IV Great Britain Model 1 RIVPACS IV Northern Ireland Model 1. Conditional formatting validation carried validation rules described table user enters data input file spreadsheet. validation Observed Biological data within RICT. However, RICT validate relevant values provided prediction process prior classification process. check null values values required classification successful. Note, data need entered season relevant. WFD classification, data spring autumn. Data Item Validation Season ID Season_ID must numeric single digit code, .e. list: 1 = spring 2 = summer 3 = autumn 4 = spring + summer 5 = spring + autumn 6 = summer + autumn 7 = spring + summer + autumn See Indices table new labels Must numeric integer (.e. whole number) Bias (Ntaxa_Bias) Must numeric","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"conversion-of-input-environmental-variables","dir":"Articles","previous_headings":"","what":"Conversion of Input Environmental Variables","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"values input environmental variable data needs converted particular values required prediction process. follows: NGR converted latitude longitude Calculate mean air temperature temperature range latitude longitude (GB ) Calculate Mean Substratum Composition Estimating Discharge Category (unavailable) Stream Velocity Estimating Alkalinity (unavailable) Hardness, Calcium Conductivity. addition, EVs need conversion NGR convert many EVs logarithms Replace values EVs prevent arithmetical problems, division zero required conversion rules validation rules need applied described .","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"convert-grid-references","dir":"Articles","previous_headings":"6 Conversion of Input Environmental Variables","what":"Convert Grid References","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Grid references consists : nat_grid_ref = 2 letters British National Grid (BNG) 1 letter Irish grid specifying 100km x 100km grid square easting = 3 digit Easting within 100km grid square (nearest 100m) northing = 3 digit Northing within 100km grid square (nearest 100m) derive latitude longitude, NGR input users run getLatLong() helper-functions.R file. code converts grid references Latitude Longitude WGS84 system. co-ordinate system required calculate Long Term Average Mean Temperature Range Air Temperature environmental variables. specific function code used within helper-functions.R : getLatLong <- function(nat_grid_ref, easting, northing, coordsys_latlon, area) : nat_grid_ref, grid letter(s), easting northing user input file, coordsys_latlon uses WGS84 system described area gb ni. NOte, GIS model 44 data provides Lat/Lon BNR SX SY columns. converted lat lon rict_validate.R function.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"latitude-and-longitude-for-ni","dir":"Articles","previous_headings":"6 Conversion of Input Environmental Variables","what":"Latitude and Longitude for NI","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"- using area = \"ni\" within getLatLong() function.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"calculate-air-temperature","dir":"Articles","previous_headings":"6 Conversion of Input Environmental Variables","what":"Calculate Air Temperature","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"conversion process applicable GB model sites. converting Latitude Longitude Long Term Average Mean Temperature Range Air Temperature, RICT uses data file containing previously derived values Mean air temperature Air temperature range points centres 5km interval grid squares. data file can found inst/ext directory called air-temp-grid.csv. calculate Long Term Average Mean Temperature Range Air Temperature, Latitude Longitude previously derived run calc-temperatures.R within prediction support files folder. specific function code used within calc-temperatures.R : calculated_temps <- calcTemps(coordinates) : coordinates eastings northings (lat, long) calculated values described Section 6.1 temperature grid used obtain mean air temperature mean air temperature range RICT predictions. dots represent points existing temperature grid site exactly coordinates centre point Key 0 Available data point1 Data point included sample5 Nearest point existing temperature grid site site exactly coordinates centre point point exactly coordinates centre point samples centre point provide temperature mean range point exists dataset: centre point doesn’t exist example surrounding 8 points sampled, 4 8 pts present within dataset value returned: condition satisfied sampling expanded include adjacent points, least 5 24 possible points available result returned - less 5 result returned: site lies exactly N/S line centre point point lies exactly N/S line centre point nearest point one sampled points present dataset: one two points present dataset two either side also sampled, three points present result returned: less 4 6 points present dataset three also sampled least 4 12 present result returned: site lies exactly E/W line centre point point lies exactly E/W line centre point nearest point east sampled points present dataset: one two pointts present dataset two either side also sampled, three points present result returned: less 4 6 points present dataset three east west also sampled assuming least 4 12 present: none satisfied - majority sites. site coincident point n/s e/w line point. Interpolates four values, 3 4 points must present return value: satisfied sampling expanded take 16 points 5 must present:","code":"# R version originally written by by C. Laize CEH in early 2012 # Based on FORTRAN PROGRAM TEMPGRID # For QC and traceability, followed the FORTRAN code as closely as possible; not necessarily best R code # Converted to calc.temps function by M Dunbar, Environment Agency April 2018  # Modified by T Loveday to avoid errors on east coast, Environment Agency May 2019  # Modified by T Loveday Environment Agency Mar 2020 to improve look and performance ############################################  #Program to calculate mean temperature and annual temperature range  calc.temps <- test1<-function(coordinates){ # coordinates is a data frame with three columns # SITE_ID # EASTING4 # NORTHING4    # this function will know about AirTempGrid because it will have been defined in the global environment just # before the function has been called. This isn't great programming practice, but will do for now.    SMEAN<-NULL SRANGE<-NULL  TempGrid_out<-data.frame() for (l in c(1:nrow(coordinates))) {#0 if(nchar(coordinates$Site_ID[l])<4) {   for(z in c(1:(4-nchar(coordinates$Site_ID[l])))){     coordinates$Site_ID[l]<-paste(\"0\", coordinates$Site_ID[l],sep=\"\")   } }  NP<-0 subsetATG1 <- NULL IGEAST<-coordinates$Easting[l]    #============================================================                         #remember to change back IGNORTH<-coordinates$Northing[l]  #============================================================  KE<-IGEAST-25 KN<-IGNORTH-25  #find nearest 5km-point to sw and distances e and n from that #although this point might be the below the site location as the first four are derived by adding 50 to east and nort  KSQE<-(trunc(KE/50)*50)+25 KSQN<-(trunc(KN/50)*50)+25  IREME<-IGEAST-KSQE IREMN<-IGNORTH-KSQN  ME1<-KSQE ME2<-ME1 MN1<-KSQN MN2<-MN1  #test if at a 5km-point or a vertical or horizontal between if (IREME==0 & IREMN==0) {#1 site is coincident with a point possible on the grid         subsetATG1 <- subset(AirTempGrid,  Easting >= ME1 & Easting <= ME2 & Northing >= MN1 & Northing <= MN2)     NP<-nrow(subsetATG1) ;SMEAN<-subsetATG1$TEMPM ;SRANGE<-subsetATG1$TEMPR      if(NP==1){#2     } else {#2 if the point is not present in the tempgrid file the search is expanded to the surrounding 8 squares              subsetATG1 <- subset(AirTempGrid,  Easting >= ME1 -50 & Easting <= ME2 + 50 & Northing >= MN1 -50 & Northing <= MN2 + 50)         NP<-nrow(subsetATG1)         if(NP>3){#3         } else {#3 if 3 of the 8 points are not present in the tempgrid file the search is expanded to the surrounding 24 squares              subsetATG1 <- subset(AirTempGrid,  Easting >= ME1 -100 & Easting <= ME2 + 100 & Northing >= MN1 -100 & Northing <= MN2 + 100)             NP<-nrow(subsetATG1)             if(NP<4){NP<-0} else {}#4             }#3         }#2  } else {#1         if (IREME==0) {#5 site lies on the N/S line of a point which may or may not be in the temp grid             subsetATG1 <- subset(AirTempGrid,  Easting == ME1  & Northing >= MN1 & Northing <= MN2 + 50)             NP<-nrow(subsetATG1)             if(NP==2){#6             } else {#6 if either point is absent the search is expanded to E and W to give a potential max no of points of 6                 subsetATG1 <- subset(AirTempGrid,  Easting >= ME1 -50 & Easting <= ME2 + 50 & Northing >= MN1 & Northing <= MN2 + 50)                 NP<-nrow(subsetATG1)                     if(NP>3){#7                 } else {#7 if less than 4 of the possible 6 points are present the search is expanded N and S to give a potential max no of points of 12                     subsetATG1 <- subset(AirTempGrid,  Easting >= ME1 -50 & Easting <= ME2 + 50 & Northing >= MN1 -50 & Northing <= MN2 + 100)                     NP<-nrow(subsetATG1)                     if(NP<4){NP<-0} else {}#8                     }#7                  }#6          } else {#5                 if (IREMN==0) {#9                                        subsetATG1 <- subset(AirTempGrid,  Easting >= ME1  & Easting <=  ME2 + 50 & Northing >= MN1 & Northing <= MN2)                     NP<-nrow(subsetATG1)                     if(NP==2){#10                                            } else {#10                         subsetATG1 <- subset(AirTempGrid,  Easting >= ME1  & Easting <=  ME2 + 50 & Northing >= MN1 -50 & Northing <= MN2 +50)                         NP<-nrow(subsetATG1)                         if(NP>3){#11                         } else {#11                         subsetATG1 <- subset(AirTempGrid,  Easting >= ME1 -50  & Easting <=  ME2 + 100 & Northing >= MN1 -50 & Northing <= MN2 +50)                         NP<-nrow(subsetATG1)                         if(NP<4){NP<-0} else {}#12                             }#11                         }#10                 } else {#9                         #must interpolate between 4 values if none of the above is satisfied                         subsetATG1 <- subset(AirTempGrid,  Easting >= ME1  & Easting <=  ME2 + 50 & Northing >= MN1 & Northing <= MN2 +50)                         NP<-nrow(subsetATG1)                         if(NP>2) {#13                         } else {#13                                 subsetATG1 <- subset(AirTempGrid,  Easting >= ME1 -50  & Easting <=  ME2 + 100 & Northing >= MN1 -50 & Northing <= MN2 +100)                                 NP<-nrow(subsetATG1)                                 if(NP<4){                                     NP<-0                                     } else {}#14                                 }#13                     }#9              }#5     }#1 #write.csv(subsetATG1 ,\"Subset.csv\", row.names = FALSE, append = FALSE) if(NP==0){     smean<-0     srange<-0     }else{     if(NP==1){          smean<- subsetATG1$TEMPM         srange<- subsetATG1$TEMPR         }else{         subsetATG1$D<-(subsetATG1$Easting-(KE+25))^2+(subsetATG1$Northing-(KN+25))^2         ifelse(subsetATG1$D!=0.000000, subsetATG1$DS<-1/subsetATG1$D, subsetATG1$DS<-0.01)         smean<- sum(subsetATG1$TEMPM/subsetATG1$D)/sum(subsetATG1$DS)         srange<- sum(subsetATG1$TEMPR/subsetATG1$D)/sum(subsetATG1$DS)         }     } print(paste(coordinates[l,1],NP, smean, srange)) TempGrid_out<-rbind(TempGrid_out, cbind(coordinates[l,], smean, srange)) }#0 TempGrid_out<-as.data.frame(TempGrid_out) #write.csv(TempGrid_out,\"TempGrid.csv\", row.names = FALSE, append = TRUE) } 0 0 0 0 0   0 0 0 0 0   0 0 1 0 0   0 0 0 0 0   0 0 0 0 0 0 0 0 0 0    0 1 1 1 0    0 1 5 5 5    0 1 1 5 5    0 0 0 0 0 1 1 1 1 1      1 1 5 5 5  1 1 5 5 5   1 1 5 5 5    1 1 1 1 1 0 0 0 0 0    0 0 1 0 0    0 0 1 0 0    0 0 0 0 0    0 0 0 0 0 0 0 0 0 0   0 1 5 1 0   0 1 1 1 0   0 0 0 0 0   0 0 0 0 0 0 1 1 1 0   0 1 5 5 0   0 1 1 5 0   0 1 1 1 0   0 0 0 0 0 0 0 0 0 0   0 0 0 0 0   0 0 1 1 0   0 0 0 0 0   0 0 0 0 0 0 0 0 0 0   0 0 1 1 0   0 0 1 1 0   0 0 1 1 0   0 0 0 0 0 0 0 0 0 0   0 1 5 5 1    0 1 1 5 1    0 1 1 1 1    0 0 0 0 0 0 0 0 0 0   0 0 1 1 0   0 0 1 1 0   0 0 0 0 0   0 0 0 0 0 0 1 1 1 1   0 1 1 5 5      0 1 1 5 5     0 1 1 1 1   0 0 0 0 0"},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"calculating-mean-substratum-composition","dir":"Articles","previous_headings":"6 Conversion of Input Environmental Variables","what":"Calculating Mean Substratum Composition","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"MSUBST (phi units) derived following user-supplied environmental variables input file river bed substratum composition observed sampling site: Algorithm used : specific function code get_substrate used can found within helper-functions.R","code":"BOULDER_COBBLES = percentage cover of Boulders/Cobbles   PEBBLES_GRAVEL  = percentage cover of Pebbles/Gravel   *SAND   = percentage cover of sand   *SILT_CLAY  = percentage cover of silt/clay TOTSUB = BOULDER_COBBLES + PEBBLES_GRAVEL + SAND + SILT_CLAY MSUBST = ( -7.75*BOULDER_COBBLES - 3.25*PEBBLES_GRAVEL + 2*SAND + 8*SILT_CLAY ) / TOTSUB"},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"estimating-discharge-category","dir":"Articles","previous_headings":"6 Conversion of Input Environmental Variables","what":"Estimating Discharge Category","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"value discharge category (DCH) supplied user test site, estimated measurement surface water velocity category (VEL) supplied user. neither value provided error recorded site prediction classification take place site. conversion user-supplied velocity category (VEL) discharge category (DCH) done : Converting velocity category (VEL) estimate sort mid- typical actual velocity use equation RDCH = DEPTH/100 * WIDTH * VELC(VEL)/100 convert estimated velocity VELC(VEL) estimated actual mean discharge RDCH cumecs Finally, assign estimated discharge RDCH appropriate discharge category DCH based discharge category upper limits FORTRAN algorithm estimating DCH Stream Velocity : specific function code get_discharge() used can found within helper-functions.R.","code":"DATA cdch / 0.31, 0.62, 1.25, 2.5, 5.0, 10.0, 20.0, 40.0, 80.0 /   CDCH(1) = 0.31   CDCH(2) = 0.62   CDCH(3) = 1.25   CDCH(4) = 2.50   CDCH(5) = 5.0   CDCH(6) = 10.0   CDCH(7) = 20.0   CDCH(8) = 40.0   CDCH(9) = 80.0      VELC(1) = 5.0   VELC(2) = 17.5   VELC(3) = 37.5   VELC(1) = 75.0   VELC(1) = 150.0   RDCH = DEPTH/100. * WIDTH * VELC(VEL)/100   K=10   REPEAT     DCH=K   K=K-1   UNTIL RDCH>CDCH(K)`"},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"estimating-alkalinity","dir":"Articles","previous_headings":"6 Conversion of Input Environmental Variables","what":"Estimating Alkalinity","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"value alkalinity (ALK) supplied user test site, assumed alkalinity estimated , order preference, user-supplied values either water hardness (HARD), calcium concentration (CALCIUM) conductivity (CONDUCT). none values provided error recorded site prediction classification take place site. algorithm estimating Alkalinity values : specific helper function get_alkalinity().","code":"IF HARD is provided THEN   ALK = 4.677 + 0.6393*HARD  sudo apt install font-manager ELSE   IF CALCIUM is provided THEN   ALK = 14.552 + 1.7606*CALCIUM   ELSE   IF CONDUCT is provided THEN   ALK = 0.3201*CONDUCT -8.0593"},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"transform-environmental-variables","dir":"Articles","previous_headings":"6 Conversion of Input Environmental Variables","what":"Transform Environmental Variables","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"environmental predictor variables used discriminant functions logarithm base10 transformed form (denoted Log10). , therefore, need converted prior prediction. discriminant functions Great Britain (GB) model (Reference end group set 1) use 13 environmental predictor variables (.e. vN = 13), detailed . Northern Ireland (NI) model (Reference end group set 2) uses set variables apart air temperature mean (TEMPM) air temperature range (TEMPR), available Northern Ireland probably add discriminatory power within relatively small geographic region. purposes specifying discriminant functions inputting coefficients (DFCoeffv,d), RICT helper-functions.R file (among support files) Northern Ireland model. environmental predictor variables used discriminant functions logarithm base 10 transformed form (denoted Log10), detailed . Specific functions within helper-functions.R conversions described Sections 6.1 – 6.6 also calculate log base 10 Environmental variables require Log Base 10 form. precise order form environmental variables used Env 1– EnvvN discrimination functions equations used calculate discriminant function axis scores (DFScore) follows: ** Alkalinity involved discriminant functions untransformed form (Env9) log transformed form (Env10) represent non-linear impact biota. table also shows EVs supplied user input file EVs internally derived RICT conversions.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"validation-of-derived-environmental-variables","dir":"Articles","previous_headings":"6 Conversion of Input Environmental Variables","what":"Validation of Derived Environmental Variables","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Whenever value Environmental variable derived conversion applied, needs validated various max/min values. two distinct max/min values; Fail Warn required validation detailed previously section 5. conversion processing carried , result value present every required Environmental variable. complete set Environmental variables called Predictive Environmental Variables (PEVS).","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"prediction-process","dir":"Articles","previous_headings":"7 Prediction","what":"Prediction Process","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"prediction functionality involves four distinct steps: determine probability end group membership determine Environmental Suitability based ), determine predicted index values indices relevant run based ), determine predicted taxa present site complex part ), involves use multiple discriminant analysis specialised statistical techniques (e.g. Mahanalobis Distance). needs carried every set site data applicable run (site may present one years’ worth environmental data provided). flow diagram summarises prediction process calculations (including data input, validation, conversion transform steps described ) well identifying relevant section information WFD72C final report:","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"prediction-overview","dir":"Articles","previous_headings":"7 Prediction","what":"Prediction Overview","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"probability site belonging End Group determined similarity Environmental Variables (EVs) relevant End Group. Due multivariate nature environmental variable data, Multiple Discriminant Analysis (MDA) used turn environmental variable data format can used discriminate end groups. MDA depends multiple Discriminant Functions (DF). Discriminant Function general format:- Z Discriminant Score (DS) particular discriminant function, c1…cn coefficients discriminant function EV1…EVn values environmental variables. DF linear combination EVs coefficients, maximises separation data space end groups. words, discriminant function solved mean values environmental variables end group results plotted line, value solved formula end group far apart nearest neighbour achieved using available environmental variables separate end groups","code":"Z = constant + c1EV1 + c2EV2 + c3EV3 + ... + cnEVn"},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"environmental-variables","dir":"Articles","previous_headings":"7 Prediction","what":"Environmental Variables","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"values EVs relevant prediction run determined acceptance, validation subsequent conversion processing input data described section 5 6 document. referred algorithm EnvvN.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"discriminant-functions-and-coefficients","dir":"Articles","previous_headings":"7 Prediction","what":"Discriminant Functions and Coefficients","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"RIVPACS model used determine Discriminant Functions (DFs) run. GB model 1 13 EVs DFs values can found inst/ext folder GB file called DFCOEFF_GB685. GB model 44 17 EVs DFs values can found prediction support files folder GB file called discrimant-function-coefficients-model-44.csv - see section 12 additional Model 44 information. NI model 11 EVs, DFs values can found prediction support files folder Northern Ireland file called DFCOEFF_NI separate occurrences DF. single ‘constant’ , component EV, co-efficient applied EV value. coefficients referred algorithm DFCoef.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"calculate-discriminant-function-scores","dir":"Articles","previous_headings":"7 Prediction","what":"Calculate Discriminant Function Scores","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 4 diagram )  functions RICT uses calculations steps (steps 4 - 8) can found prediction-functions.R file. algorithms definitions provided copied WFD72C used create functions. DF, Discriminant Score needs calculated follows: DFScored = DFCoef1,d * Env1 + … + DFCoefvN,d * EnvvN; d = 1. … dN Definitions – copied WFD72C: v = id current environmental predictor variable vN = number environmental predictor variables d = id current discriminant function axis dN = number discriminant function axes current Reference end group set DFCoefv,d = discriminant function coefficient predictor variable v discriminant function d obtained values DFCOEFF_GB685 file Great Britain, DFCOEFF_NI file Northern Ireland discrimant-function-coefficients-model-44.csv model 44 can found within prediction support files. Envv = value environmental predictor variable v current test site DFScored = discriminant function score axis d current test site","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"calculate-mahanalobis-distance","dir":"Articles","previous_headings":"7 Prediction","what":"Calculate Mahanalobis Distance","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 5 diagram )  particular End Group g, probability End Group Membership calculated follows: Calculate Mahanalobis distance (MahDistg) test site End Group Definitions – copied WFD72C: g = id current end group (set ID: 1 = GB, 2 =NI) gN = number end groups current Reference end group set NRefg = number reference sites end group g DFMeang,d = mean discriminant function score end group g axis d Obtained ‘target’ values DFMEAN_GB685 file forObtained table x-103-end-group-means-formatted-jdb-17-dec-2019.csv within inst/ext folder) Great Britain, DFMEAN_NI file Northern Ireland end-group-means-discriminant-scores-model-44.csv Model 44. MahDistg = Mahalanobis distance test site end group g","code":"MahDistg = (DFScore1 - DFMeang,1)2 + ... + (DFScoredN - DFMeang,dN )2 ; for g = 1,...,gN"},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"mahanalobis-distance","dir":"Articles","previous_headings":"7 Prediction","what":"Mahanalobis Distance","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Use Mahanalobis distance determine probability End Group membership (Step 6 diagram ):  Calculate PDistg End Group PDistg = NRef g * EXP(-MahDistg/2) NRef g = number reference sites End Group (End Group Reference Data table) EXP natural exponential function Calculate PDistTot PDistTot = PDist1 PDist gN gN number end groups relevant end group set Calculate Probability End Group Membership (Probg) Probg = PDistg / PDistTot Probg Probability test site belongs end group g end process end set probabilities End Group Membership, one End Group. referred Prob1 Probn.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"determine-environmental-suitability","dir":"Articles","previous_headings":"7 Prediction","what":"Determine Environmental Suitability","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Determine environmental suitability test site prediction:  (Step 7 diagram ) certain cases may calculated low probability site end groups based data provided. order highlight user, calculation required allocate Environmental Suitability code site data indicating probability site belongs end group. potential codes : 1 OK 2 < 5% 3 < 2% 4 < 1% 5 < 0.1% required calculation uses Chi-square values (CQ1 CQ4) vary per End Group Set : prediction-functions.R function called getSuitabilityCode() calculation. detailed calculation follows: Calculate minimum Mahanalobis distance (MahDistmin) MahDistmin = minimum (MahDist1,….,MahDistn) Calculate Environmental Suitability Code Suitability text MahDistmin < value CQ1 Suitability Code = 1 suitability text >5% MahDistmin >= value CQ1 < value CQ2 Suitability Code = 2 suitability text <5% MahDistmin >= value CQ2 < value CQ3 Suitability Code = 3 suitability text <2% MahDistmin >= value CQ3 < value CQ4 Suitability Code = 4 suitability text <1% MahDistmin >= value CQ4 Suitability Code = 5 suitability text <0.1% output file provide user Suitability Code suitability text. Suitability text gives user information warnings suitability code calculated.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"determine-the-predicted-values-of-indices","dir":"Articles","previous_headings":"7 Prediction","what":"Determine the Predicted Values of Indices","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 8 diagram )  indices require processed identified options panel. initial release RICT WHPT ASPT WHPT NTAXA sets indices required WFD classification. However, Prediction, 80 indices (includes WHPT ASPT WHPT NTAXA sets), used point Prediction . prediction-functions.R contains following functions calculation: rict:::getSeasonIndexScores() : end_group_IndexDFrame uses x-103-end-group-means-formatted-jdb-17-dec-2019.csv file Algorithm: (copied WFD72C) ExpIDXi = Prob1 * IDXmeani,s,1, + … + ProbgN * IDXmeani,s,gN Definitions: (copied WFD72C) g = id current end group gN = number end groups current Reference end group set (set: 1 = GB, 2 =NI) Probg = Probability test site belongs end group g = id current biological index = total number biological indices s = id selected season(s) combination (referred ‘season s’); (1 = spring, 2 = summer, 3 = autumn, 4 = pooled spring + summer, 5 = pooled spring + autumn, 6 = pooled summer + autumn, 7 = three seasons pooled – 1, 2 3 used RICT 2) IDXMeani,s,g = Mean value index season s reference sites end group g ExpIDXi = Expected value index selected season s current test site Internally-supplied Data files: separate file called x-103-end-group-means-formatted-jdb-17-dec-2019.csv provides values : IDXMeani,s,g = Mean value index season s reference sites end group g","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"prediction-outputs","dir":"Articles","previous_headings":"7 Prediction","what":"Prediction Outputs","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"prediction processing completed, following data calculated occurrence site data: Probabilities End Group Membership Expected Index Values Predicted Taxa occurrence details expected index data passed classification process.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"all-index-prediction","dir":"Articles","previous_headings":"","what":"All index prediction","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"provides predictions wide range indices. However, uses different end group means data file derived RIVPACS database. indices output file show output prediction 80 indices. biotic indices included index prediction listed Appendix B2.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"taxa-prediction","dir":"Articles","previous_headings":"","what":"Taxa Prediction","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Although required status classification, important feature RIVPACS included RICT able predict taxa expected present site. taxon, prediction provides: Expected probability occurrence. Expected log abundance category. Expected numerical abundance. steps involved described .","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"data-limits","dir":"Articles","previous_headings":"9 Taxa Prediction","what":"Data Limits","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"large amounts data output files stain server, user limited 20 sites per run. restriction web app. Running RICT package locally unlimited.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"taxon-prediction-data-file","dir":"Articles","previous_headings":"9 Taxa Prediction > 9.1 Data Limits","what":"Taxon prediction data file","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"required taxon prediction data supplied John Davy-Bowker single file derived RIVPACS Reference Database: TAXA_AB_APR_PRAB.csv file contains following 18 columns: Note: GB model, one taxonomic level (TL1 – TL5) particular season (1-3), particular taxon level occurs row input file occurred (.e. least one positive taxonomic parameter value) least one GB RIVPACS IV reference site End-groups. Similarly taxa NI model. Thus taxa listed (.e. given) rows varies slightly seasons taxa found every seasons least one RIVPACS IV model reference sites. TL1 = BMWP taxa TL2 = WHPT taxa TL3 = RIVPACS families TL4 = RIVPACS species TL5 = mixed taxon level Season 1 = spring, 2 = summer, 3 = autumn.","code":"1. Model                1 = GB, 2 = NI 2. End_Group      1-43 for GB, 1-11 for NI 3. TL                   Taxonomic Level: TL1, TL2, TL3, TL4, TL5 4. Season_Code:     1 = spring, 2 = summer, 3 = autumn  The next 6 columns (5-10) should all be stored as Text columns (even those which appear numeric because they need to retain their leading zeroes.  5. Maitland_Code 6. Maitland_Name 7. Furse_Code 8. Furse_Name 9. NBN_Code 10. NBN_Name  The final 8 columns (11-18) are the 8 parameters whose expected values for any test site we wish to calculate for each taxon at each taxonomic level in each season    11. Average_Numerical_Abundance 12. Average_Log10_Abundance 13. Prob_Occurrence 14. Prob_Log1 15. Prob_Log2 16. Prob_Log3 17. Prob_Log4 18. Prob_Log5"},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"calculate-expected-for-a-gb-test-site","dir":"Articles","previous_headings":"9 Taxa Prediction > 9.1 Data Limits","what":"Calculate Expected for a GB test site","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"End-group means 8 parameters predicted supplied columns 11-18 taxon prediction data file. working GB model, first need subset data taxon prediction file eliminate rows NI (Model =2). Assuming RICT software already read test site’s environmental input data calculated probabilities (P1 , P2 , … P43) test site belonging 43 GB Model End-groups, particular taxa K taxonomic level L season S, predicted expected value (ExpJKLS) Taxonomic parameter J season given : EJKLS = P1 x MJKLS(1) + P2 x MJKLS(2) + … + P43 x MJKLS(43) MJKLS() = supplied End-group mean taxonomic parameter J taxa K taxonomic level L season S. mathematical sense ’s appears easy. However, practice easy, vast number taxa, taxonomic level, end-group season combinations Expected values required, also number taxa included input file varies seasons.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"calculate-all-taxonomic-expected-values","dir":"Articles","previous_headings":"9 Taxa Prediction > 9.1 Data Limits","what":"Calculate all taxonomic expected values","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"following computing trick calculates expected values taxonomic parameters taxa levels seasons one step. (P1 , P2 , … P43) denote probabilities current test site belonging 43 GB Model End-groups, : Copy column 2 (‘End_Group’) new column ‘End_Group_Prob’ Use software coding (translation) function recode new ‘End_Group_Prob’ column : 1 becomes P1 , 2 becomes P2, … , 43 becomes P43 particular taxonomic parameter J (denoted ParamJ supplied one columns 11-18), calculate new column ParamJ_Prob : Use software multi-way table function using columns (4, 3, 7, 5, 6, 8, 9, 10,) order multi-way table classifiers sum column ‘ParamJ_Prob’ across 43 ‘End-groups’ default sum function ‘End_Group’ one table classifiers. actually want use multi-way table function creates new output set columns one new column table classifier one sum across end-groups column ‘ParamJ_Prob’ fact, can one 8 taxonomic parameters, probably 8 parameters one step, first derived 8 intermediary columns: Param1_Prob, Param2_Prob,… , Param8_Prob order multi-way table classifying columns specified , namely (4, 3, 7, 5, 6, 8, 9, 10) ensure new columns Expected taxonomic parameters classifier columns sorted first Season, Taxonomic Level, Furse code, finally alternative taxonomic codes taxa. suggested using ‘Furse_Code’ first (primary individual taxonomic code) think unique always available. also make easier compare Ralph’s independent test code. summary, lead output file 18 columns, akin input file, values output file columns 11-18 now predicted Expected values 8 taxonomic parameters combination season, taxonomic level taxa code specified output file columns 1-10. procedure done test site turn. 18 output columns site stacked one additional output column denoting ‘SiteName’. single output file columns can now re-sorted externally User use subset SiteName, Season, Taxonomic Level /Tax code, required. example, just get predictions taxonomic parameters taxa taxonomic level TL1 (BMWP family level), just subset 18 output columns column TL= TL2. user wishes view prediction results, csv output generated can downloaded used reports.","code":"ParamJ_Prob = End_Group_Prob  x ParamJ"},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"taxon-prediction-output","dir":"Articles","previous_headings":"9 Taxa Prediction > 9.1 Data Limits","what":"Taxon prediction Output","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Taxon prediction output includes row taxon predicted. site, expect 3500 rows data. first block rows first site selected results second site. row includes columns taxon prediction data file, together siteName. Sections based notes write Maybin (March 2020):","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"gb-ni","dir":"Articles","previous_headings":"9 Taxa Prediction > 9.2 Data Input files","what":"GB & NI","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"New Input File: New_Input_file_Data_to_use_multi_year.csv prediction-functions.R helper-functions.R","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"r-code-for-taxa-prediction","dir":"Articles","previous_headings":"9 Taxa Prediction","what":"R code for taxa prediction","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"rict_predict function previous predictions taxa prediction need find site’s EndGroup, uses columns 15:57 GB 13:23 NI. important file looks taxonomic info TAXA_AB_APR_PRAB.csv model used prediction. EndGroup found used file compute predictions. argument taxa = TRUE function loops site processes site predictions.","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"classification-process-summary","dir":"Articles","previous_headings":"10 Classification","what":"Classification Process Summary","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"flow diagram summarises classification process calculations well identifying relevant section information WFD72C final report sources information:  Note blue boxes indicate processes simulated.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"classification-overview","dir":"Articles","previous_headings":"10 Classification","what":"Classification overview","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"every site input classification process consists Observed Expected Index Values ‘current year’ applicable index. Multiyear classification include Observed Expected Index Values two previous years applicable index. WFD classification, RICT use TL2 WHPT Abundance weighted distinct taxa ASPT NTAXA indices. functions RICT uses calculations described steps (steps 1 - 13), can found ClassificationfunctionsV2 within classification support files folder. algorithms definitions provided copied WFD72C plus sources used create functions.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"calculate-expected-values","dir":"Articles","previous_headings":"10 Classification","what":"Calculate Expected Values","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 1 process diagram Section 7)  main result RIVPACS prediction (Section 7), based environmental variable data input user. prediction value index expected site best quality available type site, based samples collected best available reference sites.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"adjust-expected-values","dir":"Articles","previous_headings":"10 Classification","what":"Adjust Expected Values","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 2 process diagram )  aim step standardise raw predictions relate environmental quality (high/good boundary quality) using algorithms first developed WFD72b. step necessary take account variation environmental quality RIVPACS reference sites. number processes involved step described : computeScoreProportions() function within prediction support files folder used calculate proportions (Qij) end group using CSV file (also within prediction support files folder) called EndGrp_AssessScores. getWeighted_proportion_Rj() function within prediction support files folder used calculate weighted proportions (Rj) using probabilities prediction process multiplying Qij proportions. compute_RjAj() function within prediction support files folder used calculate RjAj multiplying weighted proportions adjustment factors. See details regarding adjustment factors. Finally, RjAj value used divide predictions (NTAXA ASPT) get adjusted expected value (ExpIDXadj,) site index. reference adjustment values referred default values WFD classification can found adjustParams_ntaxa_aspt csv file within classification support files folder. supporting data table csv file contains number reference sites Biologist assessment score (1-5) End Group together five adjustment factors (Q1, Q2, Q3, Q4, Q5) index. source csv file based Table 6 Testing RICT predictions classifications draft report 2018 : Table 1. Adjustment factors reference site quality (Q1, Q2, Q3, Q4, Q5) abundance-weighted WHPT NTAXA WHPT ASPT However, work done resulted slightly different values adjustment factors reflected adjustParams_ntaxa_aspt.csv file used RICT, expected Testing RICT predictions classifications draft report 2018 shortly updated include Table 7 show changes. one set adjustment factors index. Within current RICT, adjustment factors WHPT NTAXA WHPT ASPT calculated.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"eqr-conversion-factor","dir":"Articles","previous_headings":"10 Classification","what":"EQR Conversion Factor","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 3 process diagram )  conversion factor used convert adjusted predictions relate high/good boundary quality reference values relate reference condition, somewhere high status (reference values average value metric reference sites reference condition = high status) index different conversion factor, based average value index RIVPACS Reference Sites divided value RIVPACS reference sites WFD high status (reflected Biologists’ Assessment values reference site). default WFD classification RICT conversion factor value (copied Section 5.5 Testing RICT predictions classifications draft report 2018): 1.0049 WHPT NTAXA 0.9921 WHPT ASPT","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"convert-adjusted-expected-to-reference-value","dir":"Articles","previous_headings":"10 Classification","what":"Convert adjusted expected to reference value","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 4 process diagram )  aim step convert predictions high/good boundary reference values, somewhere high status (actually average value index reference sites high status), applying conversion factor. conversion factor applied adjusted expected value give expected reference value used calculate EQRs expected Water Framework Directive. Specifically, ExpIDXRef,calculated : ExpIDXRef,= ExpIDXAdj,/ K : ExpIDXAdj,= adjusted expected value calculated described section 8.2 . K = WFD conversion factor (.e. WHPT NTAXA: K = 1.0049, WHPT ASPT K = 0.9921 described section 8.3 . IDX = Index, .e. WHPT NTAXA WHPT ASPT = specific site avoids need intermediary step calculating referring EQI (Environmental Quality Indices) values (calculated EQI = Obs / ExpAdj) means site classifications can use published class limits index EQR values directly. calculation done directly within RICT code via function.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"simulate-uncertainty-in-expected","dir":"Articles","previous_headings":"10 Classification","what":"Simulate uncertainty in expected","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 5 process diagram )  aim step take account error measurement environmental variables used predict reference values. noted “ +eir “ shown algorithm process step summary algorithm values ZExpir * SDExpi / √(NExpyear) described detail . error term used adjust expected value. simulation uncertainty ExpRef obtained using algorithms Section 6.4 Clarke & Davy-Bowker WHPT indices RICT Report March 2014 report, now uncertainty Expected values measured WFD Reference-adjusted value ExpRef., amended described . Main algorithm used: ExpIDXir = ExpIDXi + ZExpir * SDExpi / √(NExpyear) (using notation section 6.4 2014 WHPT report): ExpIDXi = WFD Reference-adjusted Expected value (ExpRef) index ExpIDXir = WFD Reference-adjusted Expected value index simulation r SDExpi = Error SD expected value index NExpyear = 1 single-year run = number years (1, 2 3) separate estimate E value involved estimate average E value (multi-year run) ZExpir = Random number deviate standard Normal distribution mean 0.0 SD 1.0, use simulation r index : SDExp7 = 4.3 = Measurement error SD Expected values weighted WHPT Score (index 7) SDExp8 = 0.53 = Measurement error SD Expected values weighted WHPT NTAXA (index 8) SDExp9 = 0.081 = Measurement error SD Expected values weighted WHPT ASPT (index 9) Within RICT, calculations done using functions can found ClassificationfunctionsV2 (within classification support files folder). noted important index also aware numbering index. indicated , index number, .e.: WHPT Score (index 7) WHPT NTAXA (index 8) WHPT ASPT (index 9)","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"calculate-bias-adjustment","dir":"Articles","previous_headings":"10 Classification","what":"Calculate Bias Adjustment","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 6 process diagram )  RICT classification requires users input observed value index (ObsIDXi), based samples collected field. value provided user completing relevant data field input file described section 5 Annex B document. Values required index three seasons, spring, summer autumn. Users may also input bias value (UBiasis) NTAXA, reflects impact analytical error (measured auditing) observed index values. value provided user completing relevant data field input file described section 5 Annex B document. RICT calculates bias ASPT bias NTAXA observed NTAXA. input value Bias provided, RICT use default value 1.62. bias correction wanted, users enter bias value zero relevant data field input file. zero value must entered left blank RICT use default value.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"simulate-uncertainty-in-observed-values","dir":"Articles","previous_headings":"10 Classification","what":"Simulate uncertainty in observed values","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 7 process diagram )  simulations take account sampling error, estimated replicated sampling studies, including Biological Assessment Methods Study (BAMS) needed statistical confidence status classification can estimated. main algorithm used: ObsIDXir = ObsIDXi ZNormir * SDObsi : ObsIDXi = input value provided user observed value index described section 8.6 ZNormir = Random number deviate standard Normal distribution mean 0.0 SD 1.0 index simulation r SDObsi single-year runs: SDObsi = √( (SDRepi)2 + (SDTSeasi)2) values SDRep = 0.269 SDTSeas = 0.279 Definitions index used within RICT (abundance-weighted WHPT indices copied Section 6.3.3.2 (b) WHPT Abundance-Weighted Indices SEPA Report: ObsIDX8r = (√(ObsIDX8) + ZObs8r)2 = rth simulated value observed weighted WHPT NTAXA ObsIDX9r = ObsIDX9 + ZObs9r = rth simulated value observed weighted WHPT ASPT ObsIDX7r = ObsIDX8r * ObsIDX9r = rth simulated value observed weighted WHPT Score Within RICT, calculations done using functions can found classification-functions.R.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"simulate-variation-in-bias","dir":"Articles","previous_headings":"10 Classification","what":"Simulate variation in Bias","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 8 process diagram )  simulation user input bias calculated RICT using getUbias8r() function found classification-functions.R. algorithms used within function copied Section 6.3.3.3 WHPT Abundance-Weighted Indices SEPA Report. Definitions ObsIDXir = Simulation r Observed sample value index current test site (uncorrected bias) Ubias8 = estimate average net -estimation WHPT NTAXA observed sample Ubias8 either: input user RICT software estimated 36% higher user-input bias (Ubias2) number BMWP taxa .e. Ubias8 = 1.36 Ubias2 Special case: WHPT taxa recorded sample (.e. ObsIDX8 = 0), assume none missed (.e, set Ubias8 = 0) Ubias8r = bias (net -estimate number WHPT taxa) simulated sample r, estimated random deviate Poisson distribution mean Ubias8 Zbias9r = Random number deviate standard Normal distribution mean 0.0 SD 1.0 Ubias9r = abundance-weighted WHPT ASPT Ubias8r missed WHPT taxa simulated sample r = u9a + u9b * ObsIDX9 + Zbias9r * (u9c / √Ubias8r) u9a = 4.35 , u3b = 0.271 , u9c = 2.5 : Ubias7r = Ubias8r * Ubias9r = bias abundance-weighted WHPT score simulated sample r","code":"Ubiasir   = Estimate of bias (net under-estimation) of index i for simulation r ObsIDXirB = Bias-corrected observed value of index i for simulation r"},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"correct-observed-values-for-bias","dir":"Articles","previous_headings":"10 Classification","what":"Correct observed values for bias","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 9 process diagram )  aim step use values provided previous steps, add together give overall calculated observed value corrected Bias. Bias measure impact laboratory error value observed indices. calculated audits laboratory performance input users described Section 8.6 . main algorithm used : ObsIDXirB = ObsIDXir + Ubiasir : ObsIDXirB = Bias corrected observed value ObsIDXir = Simulated observed value Section 8.7 Ubiasir = Simulated Bias value Section 8.8 Within RICT, calculations done using functions can found ClassificationfunctionsV2 (within classification support files folder). algorithms used within function copied Section 6.3.3.3 WHPT Abundance-Weighted Indices SEPA Report. ObsIDX7rB = ObsIDX7r + Ubias7r = bias-corrected observed abundance-weighted WHPT Score simulation r ObsIDX8rB = ObsIDX8r + Ubias8r = bias-corrected observed abundance-weighted WHPT NTAXA simulation r ObsIDX9rB = ObsIDX7rB / ObsIDX8rB = bias-corrected observed abundance-weighted WHPT ASPT simulation r noted mentioned previously, important index also aware numbering index. indicated , index number, .e.: WHPT Score (index 7) WHPT NTAXA (index 8) WHPT ASPT (index 9) Optionally, simulated EQRs stored metric point required Compare.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"calculate-environmental-quality-ratio-eqr","dir":"Articles","previous_headings":"10 Classification","what":"Calculate Environmental Quality Ratio (EQR)","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 10 process diagram )  aim step express observed value index indication human impact removing effect natural environmental conditions. Status class boundaries WFD expressed EQRs. Simulated EQRs, based simulated observed expected values, needed estimate probabilities class. main algorithm used : (EQRirB = (ObsIDXirB ÷ ExpIDXRef,ir) : EQRirB = simulated bias-corrected EQR value index ObsIDXirB = Bias-corrected observed value index simulation r calculated section 8.9. ExpIDXRef,ir = Reference-adjusted Expected value index simulation r calculated section 8.5. calculation done directly within RICT code via function.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"combine-spring-and-autumn-eqrs","dir":"Articles","previous_headings":"10 Classification","what":"Combine spring and autumn EQRs","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 11 process diagram )  aim step increase precision classification take account seasonal variations environmental quality. WFD status must based EQRs calculated spring autumn samples. values must calculated available step calculate seasonal average. EQR values spring autumn samples divided number season (.e. 2) calculate seasonal average simulation. main algorithm : EQRirB,SpSuAu = (EQRirB,Sp + EQRirB,Au) / 2 : EQRirB,SpSuAu = Season average EQR EQRirB,Sp = EQR value spring season calculated section 8.10 EQRirB,Au = EQR value autumn season calculated section 8.10 calculated RICT using getAvgEQR_SpAut() function found classification-functions.R (within classification support files folder).","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"determine-the-probability-of-the-class","dir":"Articles","previous_headings":"10 Classification","what":"Determine the probability of the class","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 12 process diagram )  aim step take account imprecision monitoring data classification. probability class simply sum simulations resulting class included output file. copied Section 6.5 WHPT Abundance-Weighted Indices SEPA Report: “Confidence class - likelihood true status class (.e. averaged across possible samples) test site five possible WFD classes estimated simply applying ‘status classification method’ simulation sample r turn. Thus class simulation r based EQI/EQR values simulation r, namely set EQIir. index overall, proportion simulations assigned status class estimates probability true (average) quality test site time period ecological status class (based macroinvertebrates).” summarise, probability class simply sum simulations resulting class data calculated included output file.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"determine-the-worst-overall-class","dir":"Articles","previous_headings":"10 Classification","what":"Determine the worst overall class","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"(Step 13 process diagram )  aim step ensure classification reflects ecological impacts caused type environmental pressure. overall status class sample defined worst classification based number taxa ASPT. referred MINTA class (.e. MINimum classes based number Taxa ASPT). WFD status site water body based worst class indicated either WHPT ASPT WHPT Ntaxa, following ‘one ’ rule. WFD requires water bodies, including rivers sites, classified one five ecological status class. classes RICT coded classes 1-5 1= ‘high’, 2=‘good’, 3=‘moderate’, 4=‘poor’ 5=‘bad’. number processes involved step described : EQR values calculated section 10 used within getClassarray_ntaxa() getClassarray_aspt() function found classification-functions.R find class relevant boundary limit values. getMostProbableClass() function found classification-functions.R used find probable class. getMINTA_ntaxa_aspt() function found classification-functions.R used find maximum two classes worst class. worst class recorded output file displayed MINTA column","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"classification-output","dir":"Articles","previous_headings":"10 Classification","what":"Classification output","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"output file created show calculated data results prediction classification. output file also indicate validation errors found run specify values resulted either “fail” “warn”. output file csv format downloaded user used reporting. output file available prediction output file available classification.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"multi-year-classification","dir":"Articles","previous_headings":"","what":"Multi Year Classification","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"aim multi-year take account temporary differences quality improve precision user one year sample data. River Invertebrate status must assessed every 3 years WFD. sites sampled 3 year monitoring cycle, WFD status can based samples collected one year. Multi-year status classification takes account inter-year variation based observations specific rivers streams. multi-year classification need following: Assessment always 3 year period. Users may supply 1, 2 3 years data. complete year’s data must include spring autumn – otherwise year included assessment. Therefore minimum requirement 1 year data includes spring autumn. year added separate row input file year data site name RICT check row see site name, store simulations include assessment carry check next row collect maximum 3 years data. changes needed input file user select multi-year option. Ralph able obtain test data can used clarify calculations correct. Output file need amended display multi-year data display term “multi-year” instead actual year Year column. Apart differences highlighted , multi-year classification follow process Prediction Classification procedures specified previous sections document. assume simple averaging based number samples involved year, necessarily seasons. therefore problem (statistical point view) spring one year autumn next, problem year 1 = single season Year 2 = 2-season classification. Basically, assume sampling effort year. However, remember official WFD status classification must always based 2-season spring + autumn data.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"multi-site-classification","dir":"Articles","previous_headings":"","what":"Multi-site classification","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"aim multi-site classification determine overall status class water body based samples collected one site. Environment Agency collects samples water bodies one site. Environment Agency currently uses VISCOUS software calculate WFD status water bodies monitored one site, well sites sampled one year 2019. Multi-site allow Environment Agency replace VISCOUS completely, therefore streamline classification process. Multi-site classification uses similar algorithms multi-year classification. Additionally, output indicates sites used. multi-year, assume simple averaging based number samples involved year within water body (necessarily seasons). therefore problem (point view multi-year classification) spring one year autumn next, problem year 1 = single season Year 2 = 2-season classification. Basically, assume sampling effort year. However, remember official WFD status classification must always based 2-season spring + autumn data.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"compare","dir":"Articles","previous_headings":"","what":"Compare","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"relevant parts algorithms section SNIFFER WFD72C project 2008 Final Report extracted adapted explain algorithms needed code Compare procedure R. new RICT refers EQR values (bias-corrected observed (Obs) values divided WFD reference-adjusted Expected (ExpRef) values, WFD72C algorithms section references former EQI (Obs/Exp) values replaced new counterpart EQR values improve explanation program new RICT Compare procedure. Compare flow chart:  Compare procedure allows user assess whether real difference EQR values /status class pair samples /sites /time periods. done using extension simulation techniques algorithms described used assess EQRs ecological status class associated uncertainty individual samples/sites time periods. first sample pair known result second result B. simulation r, independent simulated EQR values calculated index two results using methods described section 8.9 Correct observed values bias. context, independent simulations means various random uncertainty terms different completely independent two simulated samples B simulation r. compare results, two input files Compare must contain number rows. two files compared pair-wise, row row result. instance, comparing single upstream result multiple downstream results, repeat single result multiple rows (equal number downstream results) input file. Note, Compare allows individual-season estimates class spring autumn compared. Calculate Difference Related Statistics: Average EQR Results = mean(EQRA) Average EQR Results B = mean(EQRB) Average EQR: Difference (B- ) (DiffEQRirB) = EQRB – EQRA simulation r, difference two simulated EQR values (sample B value minus sample value) calculated index give DiffEQRirB corrected bias. Standard Deviation Difference = SD rN simulated values EQIi (corrected bias) index current test site Calculate SD, (SDEQRi) rN values EQRir usual way calculating SD. Lower 95% (L95) Difference = Lower 2.5 percentile rN simulated values (EQRir) EQR (corrected bias) index current test site Upper 95% (U95) Difference = Upper 2.5 percentile rN simulated values (EQRir) EQR Determine lower upper 2.5 percentiles thus 95% confidence limits sorting rN simulated EQRir values order smallest largest. lower upper percentiles given mL mU smallest values, : mL = nearest integer 0.025 * (rN + 1) mU = nearest integer 0.975 * (rN + 1) recommended rN = 9999, mL = 250 mU = 9750. Confidence (statistical test) change/difference EQR: Confidence limits difference EQR values obtained frequency distribution differences (DiffEQRir) using approach single sample EQR values described , namely, order differences smallest largest find 2.5 97.5 percentile values order distribution. Strictly speaking can’t normal type statistical test statistical significance difference (DiffEQRir) EQR actually one sample occasion actually replication. However, can generate type statistical test using simulated EQI values, specifically, frequency distribution simulated differences (DiffEQRir). PDiff0 = proportion simulated differences less equal zero. PDiff1 = proportion simulated differences greater equal zero. 2-sided test probability p difference EQR (PDiff) = 2 * minimum (PDiff0, PDiff1) PDiff two-sided test probability null hypothesis difference true EQR values sites /times two samples taken. [True EQR site, sense, means average EQI amongst possible samples sites estimated simulated values EQR]. Code calculate difference related statistics can found compare_test() function. Note, simulated EQRs randomly re-ordered (using set.seed). simulate EQRs created rict_classify() using set.seed equal variance add simulated EQR. Therefore, calculate difference without re-ordering result zero. words, difference cancel . re-ordering, ensure difference pair EQRs compared. Confidence change status class: two simulated samples assigned status class applying ‘status classification method’ independently simulated EQR values sample simulation. done repeatedly rN simulations build two-way frequency (hence probability) distribution site (time period) sample taken status class ‘x’ (say) sites (time period) sample B taken class ‘y’. two-way probability distribution, probability samples B quality band can estimated, together probabilities sample B one band better , one band worse, two bands better, two bands worse. terms RICT software, 5 x 5 probability tables changes calculated internally using compare_probability() function. done index class limits used multi-index MINTA classification method. case, wide range outputs derived table presented user listed . coding purposes classes ‘high’ ‘bad’ referred classes 1-5 respectively, PrChij = Proportion simulations simulated sample classified class simulated sample B classified class j. = Estimated probability change status class class j Find frequent class (random pick equal frequency across two classes): * Probable Class Result = frequency class (status classification method(EQRA)) Probability likely class Result = Proportion probable class Probability likely class Result B = frequency class (status classification method(EQRB)) Probability likely class Result B = Proportion probable class Probability status class result(s) results B taken : status class = PrChii Probability B one class Worse = sum { PrChij } j > + 1 Probability B one class Worse = sum { PrChij } j = + 1 Probability B Class = PrCh11 + PrCh22 + PrCh33 + PrCh44 + PrCh55 Probability B one class Better = sum { PrChij } j = – 1 Probability B one class Better = sum { PrChij } j < - 1 Furthermore – extract output probability table order: Probability Result High & Result B HighProbability Result High & Result B Good Probability Result High & Result B ModerateProbability Result High & Result B Poor Probability Result High & Result B Bad Probability Result Good & Result B High Probability Result Good & Result B Good Probability Result Good & Result B Moderate Probability Result Good & Result B Poor Probability Result Good & Result B Bad Probability Result Moderate & Result B High Probability Result Moderate & Result B Good  Probability Result Moderate & Result B ModerateProbability Result Moderate & Result B PoorProbability Result Moderate & Result B Bad Probability Result Poor & Result B HighProbability Result Poor & Result B GoodProbability Result Poor & Result B ModerateProbability Result Poor & Result B PoorProbability Result Poor & Result B BadProbability Result Bad & Result B HighProbability Result Bad & Result B GoodProbability Result Bad & Result B ModerateProbability Result Bad & Result B PoorProbability Result Bad & Result B Bad Pivot calculated variables (bold ) give one column per variable. row represents pair classification results.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"model-44-prediction-and-classification","dir":"Articles","previous_headings":"","what":"Model 44 Prediction and Classification","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Centre Ecology Hydrology (CEH) produced database GIS environmental variables data every 50m steam river use new RIVPACS GB Model M44. T database map-based location checker, enable users check Ordnance survey grid reference enter returns data catchment intended. Many monitoring sites downstream end rivers close tributaries, small error grid reference GIS river line can cause system return data wrong river, database holds data one river within 50m grid. database holds environmental data Model 44, derived GIS, including discharge category including alkalinity. database hosted Add details model produced Ralph Clark John Davey Bowker based predictive variables detailed report ‘GIS Re-calibration hydromorphology-independent RIVPACS predictive model (M37): new model M44’. RICT used new RIVPACS Model 44 give better predictions streams impacted siltation due flow alteration. majority coding done RICT prediction classification also suitable running Model 44 prediction classification. minor adjustments, RICT prediction classification code suitable running Model 1 Model 44. main areas development involved understanding extract data RIVPACS link location checker outlined picture :","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"model-44-validation","dir":"Articles","previous_headings":"14 Model 44 Prediction and Classification","what":"Model 44 Validation","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"GIS input file spreadsheet may needed values (tbc). However, noted values provided model entered user. Detailed validation requirements model 44 outlined acceptance validation - section 5 document.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"discriminant-function-scores","dir":"Articles","previous_headings":"14 Model 44 Prediction and Classification","what":"Discriminant function scores","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Another difference now 17 discriminant function scores discriminant function end group means scores rather 13. See supporting files: discrimant-function-coefficients-model-44.csv end-group-means-discriminant-scores-model-44.csv","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"summary-diagrams","dir":"Articles","previous_headings":"14 Model 44 Prediction and Classification","what":"Summary diagrams","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"flow diagram summarises prediction process calculations well identifying relevant report information:  flow diagram summarises classification process calculations well identifying relevant report information:","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"operational-support","dir":"Articles","previous_headings":"15 Non-Functional Requirements","what":"Operational Support","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"tool needs freely available anyone access online. User support EA users via Defra service desk (Tier 4 service level) route issue appropriate team deal . routing RICT support email Environmental systems team depending nature issue. EA users also able access article MyIT provide FAQs help users common issues. User support UK regulatory agency users via support email box called RICT support. official contracted support external users can send issues comments RICT support inbox","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"look-and-feel-of-user-interface","dir":"Articles","previous_headings":"15 Non-Functional Requirements","what":"Look and Feel of User Interface","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"user interface provide intuitive ‘user friendly’.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"input-and-output-files","dir":"Articles","previous_headings":"15 Non-Functional Requirements","what":"Input and Output Files","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Input files standard template Excel can downloaded, completed user uploaded CSV file RICT. user guide available help users understand complete input file. output file produced RICT CSV file following run. CSV file can easily opened Excel applications view results.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"hosting","dir":"Articles","previous_headings":"15 Non-Functional Requirements","what":"Hosting","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"RICT web app cloud hosted Posit. code hosted Github.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"accessibility","dir":"Articles","previous_headings":"15 Non-Functional Requirements","what":"Accessibility","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Access RICT functionality may required number different device types. RICT use-able minimum following device types (model specified): Desktop Laptop Access RICT functionality may required number different browser types. RICT use-able following browser types: Chrome Firefox Edge Users access data access data input output users.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"performance","dir":"Articles","previous_headings":"15 Non-Functional Requirements","what":"Performance","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"RICT accessible multiple concurrent users one time without degradation performance limitation features. Users internal EA, UK regulatory body users (SEPA, NRW NIEA) external users. RICT capable processing prediction classification large number sites (approx. 5,000) per year. RICT meet following rough order estimates service usage performance requirements: Service Availability: excess 97% times; Service Recovery: RTO (Recovery Time Objective) 48 hours; Maximum Nos. Users: <1000; Max number Concurrent Users: 50. RICT availability must acceptable level. Planned downtime maintenance must advised advance (minimum 48 hours’ notice). Unplanned downtime must communicated regularly date information tools/services affected projected downtime.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"system-administration","dir":"Articles","previous_headings":"15 Non-Functional Requirements","what":"System Administration","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Updates documentation, web app input template made via Github R developer appointed RICT group.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"data-protection","dir":"Articles","previous_headings":"15 Non-Functional Requirements","what":"Data Protection","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Data protection requirements handled Posit tool hosted Posit cloud. name email required access site.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"annex-a-input-file","dir":"Articles","previous_headings":"","what":"Annex A: Input File","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"examples import file format help understand verify format used. GB - Model 1 input format NI - Model 1 input format GIS - Model 44 input format See Input File excel spreadsheet includes test data validation full description column input table completed can found within RICT user guide.","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"prediction-outputs-1","dir":"Articles","previous_headings":"17 Annex B: Output Files predict and classify","what":"Prediction outputs","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"RICT predict classify produce two output files; one prediction, one classification Prediction Output file example output file prediction linked :","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"classification-2","dir":"Articles","previous_headings":"17 Annex B: Output Files predict and classify","what":"Classification","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"Multiple year: Single year:","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"appendix-c-biotic-included-in-all-index-prediction","dir":"Articles","previous_headings":"","what":"Appendix C: Biotic included in all index prediction","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"*Please note format changes labels indices – see table changes : full description column prediction output table values indicate can found within RICT user guide. summary list column headings given rict_predict function.","code":""},{"path":"https://aquametrics.github.io/rict/articles/functional-specification.html","id":"annex-d-critical-success-factors","dir":"Articles","previous_headings":"","what":"Annex D: Critical Success Factors","title":"River Invertebrate Classification Tool (RICT) Functional Specification","text":"CSF specified denotes minimum requirements agreed project team stakeholders agreed outline business case:","code":""},{"path":"https://aquametrics.github.io/rict/articles/tech-demo-temperature-change.html","id":"intro","dir":"Articles","previous_headings":"","what":"Intro","title":"Tech demo: Temperature change","text":"quick example demonstrate rict package can used simulate affect temperature changes. see : Update input dataset Simulate changes predictive variables Predict classify simulations Graph interpret results","code":""},{"path":"https://aquametrics.github.io/rict/articles/tech-demo-temperature-change.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Tech demo: Temperature change","text":"don’t R installed local machine, try using Rstudio Cloud website run R web browser - ’s quick free sign-. starting, make sure required packages installed RStudio. going use tidyverse rict packages: NOTE: packages fail load, follow example (replacing ggplot2 tidyverse) follow separate guide installing rict.","code":"library(rict) library(tidyverse)"},{"path":"https://aquametrics.github.io/rict/articles/tech-demo-temperature-change.html","id":"run-predictions","dir":"Articles","previous_headings":"","what":"Run Predictions","title":"Tech demo: Temperature change","text":"Use rict_predict function calculate set predictions. can make predictions based demo input data (demo_observed_values) available use rict library loaded. predictions output includes biological indices predictions well reference temperature values used prediction (MEAN.AIR.TEMP AIR.TEMP.RANGE columns). Behind scenes, Grid Reference used find temperature values large file 1km grid-square temperature values Great Britain stored rict package. NOTE: Northern Ireland model doesn’t use temperature predictive variable.","code":"predictions <- rict_predict(demo_observed_values)"},{"path":"https://aquametrics.github.io/rict/articles/tech-demo-temperature-change.html","id":"reference-temperature","dir":"Articles","previous_headings":"","what":"Reference Temperature","title":"Tech demo: Temperature change","text":"Temperature values (mean temp temp range) one number variables (slope, altitude etc) used predict biological indices. ’s useful able look-reference temperature values, however, want ‘reference’ temperature values starting point can slowly increment temperature values simulate temperature increase. , can include temperature values optional columns demo input dataset. Usually, don’t provide columns want rict look-values, provide columns, rict base indices predictions temperature values provide. add MEAN.AIR.TEMP AIR.TEMP.RANGE reference values predictions output demo input dataset:","code":"demo_observed_values <- cbind(rict::demo_observed_values,   \"MEAN.AIR.TEMP\" = predictions$MEAN.AIR.TEMP,   \"AIR.TEMP.RANGE\" = predictions$AIR.TEMP.RANGE )"},{"path":"https://aquametrics.github.io/rict/articles/tech-demo-temperature-change.html","id":"temperature-increments","dir":"Articles","previous_headings":"","what":"Temperature Increments","title":"Tech demo: Temperature change","text":"can now use reference temperature values baseline slowly increase temperature. , create list increasing temperatures simulating 0-2 degree rise temperature 0.2 increments.","code":"temperature_increments <- seq(0, 2, 0.2) temperature_increments ##  [1] 0.0 0.2 0.4 0.6 0.8 1.0 1.2 1.4 1.6 1.8 2.0"},{"path":"https://aquametrics.github.io/rict/articles/tech-demo-temperature-change.html","id":"simulate-temperature-increase","dir":"Articles","previous_headings":"","what":"Simulate Temperature Increase","title":"Tech demo: Temperature change","text":"’s big function: Loop temperature increases run classification predictions temperature increment. map_df function tidyverse package, iterates temperature_increments values runs function return results increment. loop/iteration function : Updates temperature values adding increment Run rict_predict rict_classify functions Join prediction classification outputs together using inner_join Returns modelled results dataframe deep-dive iteration/loops map_df type functions, see guide.","code":"modelled_temperatures <- map_df(temperature_increments, function(increment) {   demo_observed_values$MEAN.AIR.TEMP <- demo_observed_values$MEAN.AIR.TEMP + increment   demo_observed_values$AIR.TEMP.RANGE <- demo_observed_values$AIR.TEMP.RANGE + increment   predict_modelled <- rict_predict(demo_observed_values)   classify_modelled <- rict_classify(predict_modelled, year_type = \"single\")   modelled <- inner_join(predict_modelled, classify_modelled, by = c(\"SITE\", \"YEAR\", \"WATERBODY\"))   # Add temperature increase column so we know which results match which temperature increment   modelled$TEMP.INCREASE <- increment   modelled$SITE <- as.character(modelled$SITE)   return(modelled) })  # Filter on one year - to make results easier to display modelled_data <- modelled_temperatures %>%   filter(YEAR == 2016)"},{"path":"https://aquametrics.github.io/rict/articles/tech-demo-temperature-change.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"Tech demo: Temperature change","text":"Now classification predictions single dataframe, can review results temperature simulation. can plot average ASPT Spring Autumn classification EQRs (ASPT_aver_spr_aut) temperature increase. Note, higher EQR value ‘better’ ecological status site.  can see EQRs mixed response increasing temperature. Note, can find ggplot functions creating plots data guide.","code":"ggplot(modelled_data, aes(x = TEMP.INCREASE, y = ASPT_aver_spr_aut, color = SITE)) +   geom_line()"},{"path":"https://aquametrics.github.io/rict/articles/tech-demo-temperature-change.html","id":"confidence-in-simulation","dir":"Articles","previous_headings":"","what":"Confidence in Simulation","title":"Tech demo: Temperature change","text":"Can really expect increasing temperature affect EQRs way? simulated temperature increases beyond scope model training data used build model? One way provide partial answer question, use suitability code (suitcode) provided predictions outputs. suitability code indicates input data significantly different data used train model (therefore less confident can make accurate predictions). assesses scale 1-5, 1 - Low difference, 5 - High difference. select suitability code temperature increment see confidence input data suitability changes temperature increases: can see suitability code indicates input data increasing unsuitable temperature increases beyond 0.2 degrees. appears may extrapolating beyond training data can reasonably allow. Therefore, low confidence simulation.","code":"select(modelled_data, SITE, TEMP.INCREASE, SuitCode) %>%   arrange(TEMP.INCREASE) %>%   head(32) # return the first 32 rows only ##           SITE TEMP.INCREASE SuitCode ## 1  MYR-GB-01-R           0.0        1 ## 2  MYR-GB-05-R           0.0        1 ## 3  MYR-GB-09-R           0.0        1 ## 4  MYR-GB-12-R           0.0        2 ## 5  MYR-GB-01-D           0.0        1 ## 6  MYR-GB-05-D           0.0        1 ## 7  MYR-GB-09-D           0.0        1 ## 8  MYR-GB-12-D           0.0        2 ## 9  MYR-GB-01-R           0.2        1 ## 10 MYR-GB-05-R           0.2        1 ## 11 MYR-GB-09-R           0.2        1 ## 12 MYR-GB-12-R           0.2        4 ## 13 MYR-GB-01-D           0.2        1 ## 14 MYR-GB-05-D           0.2        1 ## 15 MYR-GB-09-D           0.2        1 ## 16 MYR-GB-12-D           0.2        4 ## 17 MYR-GB-01-R           0.4        3 ## 18 MYR-GB-05-R           0.4        3 ## 19 MYR-GB-09-R           0.4        2 ## 20 MYR-GB-12-R           0.4        5 ## 21 MYR-GB-01-D           0.4        3 ## 22 MYR-GB-05-D           0.4        3 ## 23 MYR-GB-09-D           0.4        2 ## 24 MYR-GB-12-D           0.4        5 ## 25 MYR-GB-01-R           0.6        5 ## 26 MYR-GB-05-R           0.6        5 ## 27 MYR-GB-09-R           0.6        5 ## 28 MYR-GB-12-R           0.6        5 ## 29 MYR-GB-01-D           0.6        5 ## 30 MYR-GB-05-D           0.6        5 ## 31 MYR-GB-09-D           0.6        5 ## 32 MYR-GB-12-D           0.6        5"},{"path":"https://aquametrics.github.io/rict/articles/tech-demo-temperature-change.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Tech demo: Temperature change","text":"Although example conclusive results, hopefully shows input data can simulated predict different scenarios. instance, run similar analysis investigate impact changes predictive variables discharge.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"User Guide","text":"Welcome RICT user guide. explain upload macro-invertebrate results RICT website. demonstrate predict reference values indices taxa lists. Additionally, explain classify status compare results.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick Start","title":"User Guide","text":"start, need river macro-invertebrate data process. data prepared, example data provided validation template spreadsheet. However, looking run results, need following: WHPT (Walley, Hawkes, Paisley Trigg) scores based macro-invertebrate results. calculate WHPT index scores, can use WHPT spreadsheet calculator. scores based macro-invertebrate results collected analysed following standard techniques. list predictor values based field observations GIS. Predictor values change depending geographic area model wish use. unsure circumstances RICT used, read Usage section.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"prepare-input-file","dir":"Articles","previous_headings":"Quick Start","what":"Prepare Input File","title":"User Guide","text":"Download validation template spreadsheet, provides helpful template input file. reference testing, template spreadsheet also includes example data. Read README instructions spreadsheet guidance completing template. Complete template area required (GB - Great Britain. NI - Northern Ireland, IoM - Isle Man) adding WHPT results predictor values. Copy paste completed template column names blank spreadsheet save Comma Separated File (.CSV). NOTE - template must contain data one region model.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"predict-and-classify","dir":"Articles","previous_headings":"Quick Start","what":"Predict and Classify","title":"User Guide","text":"Open RICT website, select options require. Select ‘Browse’ button. Browse files, upload prepared .CSV template file. Depending options select, following results displayed: Map named site markers Download Outputs button Table validation message (short message validation pass) Table predictions Classification option selected, table displaying Classification Predict Taxa Option selected, table predicted taxa Example options, map, download section RICT website. process fails, website displays red error message. See Prediction Classification section info outputs.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"compare","dir":"Articles","previous_headings":"Quick Start","what":"Compare","title":"User Guide","text":"Compare allows run comparison two sites site different dates. Prepare two .CSV input files using spreadsheet template. Use demo downstream files provided guide test . NOTE: RICT compares two files row row. instance, row 1 first file compared row 1 second file. row 2 compared row 2… . Therefore, two files compared must contain number rows. Open RICT website, navigate Compare tab, select options require, example ‘single-year’ ‘multi-year’. Select ‘Browse’ button file 1. Browse saved template file upload. Repeat file 2. RICT display results. error message appear data failed validation. See Compare section information interpreting outputs. Example compare section RICT website.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"options","dir":"Articles","previous_headings":"Quick Start","what":"Options","title":"User Guide","text":"RICT options","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"year-type","dir":"Articles","previous_headings":"Quick Start > Options","what":"Year Type","title":"User Guide","text":"Single-year - processes data separately year site. Classifies season combined Spring Autumn, data available. Multi-year - aggregated outputs across multiple years site. Provides Spring Autumn combined classification . See Classification details.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"outputs","dir":"Articles","previous_headings":"Quick Start > Options","what":"Outputs","title":"User Guide","text":"Include Classification outputs predictions, display predictions.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"include-all-indices","dir":"Articles","previous_headings":"Quick Start > Options","what":"Include All Indices","title":"User Guide","text":"option display predictions inverts indices just WHPT predictions. RICT can predict around 60+ indices. See Indices information.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"predict-taxa-lists","dir":"Articles","previous_headings":"Quick Start > Options","what":"Predict Taxa Lists","title":"User Guide","text":"Display table prediction taxa list(s). See taxa prediction information.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"User Guide","text":"RICT uses model based data collected sampling locations minimal environmental pressures predict expected conditions across river network. UK environment agencies use RICT classify rivers Water Framework Directive (WFD) assessment, enforce statutory objectives. Key Functionality: Predict reference indices values. Predict reference taxa. Classify status observed results compared expected reference conditions. Give probability status class. Compare two samples give likelihood whether significantly different. RICT maintained : Environment Agency (EA) Natural Resources Wales (NRW) Northern Ireland Environment Agency (NIEA) Scottish Environment Protection Agency (SEPA) NOTE: latest release RICT replaces version hosted Azure ML Studio.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"User Guide","text":"RICT suitable freshwater (estuarine marine) sites rivers streams naturally permanently flowing, flow sea (pumped). official status classification, must classify sites invertebrate data spring autumn year. can perform WFD macro-invertebrate classification using individual spring autumn values WHPT ASPT WHPT NTaxa (based abundance-related index values families Taxon Level 2). official method statement river invertebrate (general degradation) classification available WFD UKTAG. probabilities class provided RICT appropriate samples analysed laboratory expressed correct form WHPT bias values relate. RICT classifications used official purposes based single seasons, different forms WHPT indices samples analysed laboratory.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"sampling","dir":"Articles","previous_headings":"","what":"Sampling","title":"User Guide","text":"Collect analyse samples RICT according standard methods. two Environment Agency documents provide current outline standard approach: LIT 11610 - Freshwater Macro-invertebrate Sampling Rivers, 2017 LIT 11614 - Freshwater Macro-invertebrate analysis riverine samples, 2014 general guides available STAR project website: http://www.eu-star./ Enter > Protocols > Macro-invertebrates: RIVPACS Macro-invertebrate Sampling Protocol (covers shallow water sampling ) RIVPACS Sorting & Recording (Mike Furse).","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"validation","dir":"Articles","previous_headings":"","what":"Validation","title":"User Guide","text":"RICT automatically checks validates uploaded input file, displaying failures warnings. See Functional Specifications full list checks, warnings failure values.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"prediction","dir":"Articles","previous_headings":"","what":"Prediction","title":"User Guide","text":"RICT uses environmental predictors model expected reference conditions. Specifically, RICT uses RIVPACS IV models (River InVertebrate Prediction Classification System). based TWINSPAN grouping. information specification models can found Functional Specifications.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"models-and-areas","dir":"Articles","previous_headings":"Prediction","what":"Models and Areas","title":"User Guide","text":"two models available: Model 1 (IoM, GB NI variations) Based range observed well physical/chemical predictors (substrate, river width, slope etc). Model 1 original predictive model, still definitive version, used WFD river invertebrate status classification objectives setting. Model 44 (GB ) Based GIS (geology, catchment size etc) Alkalinity predictors using new predictive model GB . new model testing evaluation . RICT automatically select model based input template uploaded area grid references located .","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"environmental-predictors","dir":"Articles","previous_headings":"Prediction","what":"Environmental Predictors","title":"User Guide","text":"General guidance available data sources use predictor variables outlined sections . information regarding units exact definition input predictor variables models can found functional specification.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"model-1-predictors","dir":"Articles","previous_headings":"Prediction > Environmental Predictors","what":"Model 1 Predictors","title":"User Guide","text":"River substrate, width depth predictors required GB NI variations Model 1 must median long-term averages take account conditions throughout whole year, including summer. Preferably based annual averages collected many years. minimum, averages based data collected three seasons (spring, summer autumn) least one normal year (year drought floods). unable get data, use actual measurements width depth collected invertebrate sample, particularly summer, use estimate think normal width depth allow greater imprecision RIVPACS predictions. Environmental data Environment Agency monitoring sites suitable input RICT available Ecology & Fish Data Explorer https://environment.data.gov.uk/ecology-fish/. includes alkalinity discharge category.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"model-44-predictors","dir":"Articles","previous_headings":"Prediction > Environmental Predictors","what":"Model 44 Predictors","title":"User Guide","text":"Input variables Model 44 can download Defra GIS website. can copied pasted corresponding columns Model 44 template.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"alkalinity","dir":"Articles","previous_headings":"Prediction > Environmental Predictors","what":"Alkalinity","title":"User Guide","text":"Alkalinity (alternatives total hardness, calcium concentration conductivity) measured Environment Agency chemical river quality monitoring available Open WIMS data http://eawaterquality.shinyapps.io/ecologicalstatsapp/.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"grid-reference","dir":"Articles","previous_headings":"Prediction","what":"Grid Reference","title":"User Guide","text":"RICT uses 10-figure grid references. 4th 5th digits often inaccurate unless based GPS. Grid references common cause data input errors. GB Ordnance Survey grid references starts two letters. Northern Ireland, starts one letter based Irish Grid Reference System) letters represent unique 100 km square. followed eastings northings locate southwest (bottom left) corner grid square describe whole grid square, something often forgotten. size grid square indicated number digits easting northing. successive pair easting northing refers smaller grid within square indicated previous easting northing, 100 m square ST3605 roughly middle 1 km square ST30.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"default-outputs","dir":"Articles","previous_headings":"Prediction","what":"Default Outputs","title":"User Guide","text":"output predictions always includes various ‘bookkeeping’ columns reference:","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"indices","dir":"Articles","previous_headings":"Prediction","what":"Indices","title":"User Guide","text":"RICT provides predicted indices outputs range purposes. Primarily, ‘WHPT NTAXA Abund’ ‘WHPT ASPT Abund’ reference condition values predicted compared observed values Classification process. However, selecting ‘indices’ option predict indices range possible ecological insights.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"indices-usage","dir":"Articles","previous_headings":"Prediction > Indices","what":"Indices Usage","title":"User Guide","text":"Indices simplify complex biological results help ecologists explain managers. Although format intentionally simple (usually single number letter), actually complex, behave parameters continuous scale. use indices basis statistical analysis. Users wary using indices, particularly without understanding extent data derived (comprehensiveness, reliability, geographical stream type coverage), statistical properties format (average, score, percentage), impact sampling analytical error index magnitude error, way environmental pressure index designed respond affects invertebrates, environmental pressures effect, cause environmental pressures interact (example, reducing availability oxygen, increasing siltation, altering availability metal ions nutrients), environmental pressures co-occur sites pressure interest occurs. fact index sensitive particular pressure indicates impact necessarily mean pressure present site. Invertebrates respond integrated effect environmental pressures (natural anthropogenic), impossible apportion impact individual pressures unless environmental pressure severe overwhelming. increasingly case gross pressures eliminated environmental regulation.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"included-indices","dir":"Articles","previous_headings":"Prediction > Indices","what":"Included Indices","title":"User Guide","text":"regard inclusion index RICT ‘indices’ output endorsement index. indices included allow evaluated compared indices. Similarly, exclusion index imply useful.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"taxa","dir":"Articles","previous_headings":"Prediction","what":"Taxa","title":"User Guide","text":"Predict families species expected site abundances. powerful feature RIVPACS model enables prediction wide range outputs, helping investigations furthering ecological understanding. Predict five taxa lists (TL) various levels taxonomic resolution: TL1 - Super-Family TL2 - Super Family level (used routine WFD classification) TL3 - Family TL4 - Mainly species level TL5 - Family / Species level Find information taxa lists taxonomies WFD100 report. website restricts number sites 24 sites due large amount processing output generated site. Taxa prediction may take several minutes run depending number sites taxa lists required. select ‘Prediction ’ classification run, therefore need include biological data input file.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"taxon-prediction-output","dir":"Articles","previous_headings":"Prediction > Taxa","what":"Taxon Prediction Output","title":"User Guide","text":"results taxon taxa predictions include Maitland Furse taxonomic codes, leading zeroes. open CSV output file Excel normal way, lose leading zeroes Excel assume numbers. preserve leading zeroes open results Excel, need open blank Excel worksheet import results text.  output, row includes prediction results one taxon. site, expect 3500 rows data predicting taxa lists. first block rows first site selected results second site. site, rows ordered taxonomic level, season code, Maitland code, re-order data want data particular season want taxonomic levels. row includes following columns: siteName - provided input file. Model - 1 RIVPACS IV Model 1 GB, 2 RIVPACS IV Model 1 NI. TL - Taxonomic level. five levels (TL1 – TL5) : TL1 = taxa recognised BMWP indices TL2 = taxa recognised WHPT indices TL3 = families included RIVPACS TL4 = species included RIVPACS species TL5 = mixed taxon level (practical, mainly species level analysis less easily recognised species identified higher taxonomic levels) Season_Code Code specifying season; 1 = spring; 2 = summer; 3 = autumn. Maitland_Code - code identifying invertebrate. Maitland codes hierarchical. first two digits indicates class, next two family, next two genus final two species. Codes letter artificial combinations taxa. Maitland_Name - name taxon represented Maitland code. Furse_Code - Updated Maitland code, revised Mike Furse, 2 January 2007, useful organising results taxonomic order. Furse_Name - name taxon represented Furse code. NBN_Code - National Biodiversity Network code, compiled 2007 NBN_Name - name taxon represented NBN code. Average_Numerical_Abundance - predicted numerical abundance based average 10,000 simulations Average_Log10_Abundance - predicted log10 abundance category, based average 10.000 simulations Prob_Occurrence - predicted probability taxon present Prob_Log1 = probability taxon present log10 abundance category 1 (numerical abundance 1-9) Prob_Log2 - probability taxon present log10 abundance category 2 (numerical abundance 10-99) Prob_Log3 - probability taxon present log10 abundance category 3 (numerical abundance 100-999) Prob_Log4 - probability taxon present log10 abundance category 4 (numerical abundance 1000-9999) Prob_Log5 - probability taxon present log10 abundance category 5 (numerical abundance 10000+) information taxonomic framework taxon prediction output given Davy-Bowker, J, R. Clarke, T. Corbin, H. Vincent, J. Pretty, . Hawczak, J. Blackburn, J. Murphy & . Jones (2008) River Invertebrate Classification Tool. Final Report. SNIFFER Project WFD72c. Edinburgh, SNIFFER","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"classification","dir":"Articles","previous_headings":"","what":"Classification","title":"User Guide","text":"important columns Classification output : Class – WFD status. Probability class – certainty classification, taking account uncertainty caused sampling errors. ProbH, ProbG, ProbM, ProbP, ProbB – indicates likely classes whether site upper, mid lower end class. EQR – Ecological Quality Ratio; value biotic index expressed proportion reference value. reference value expected minimally disturbed, near natural environmental quality. comparison EQRs different indices seasons can help identify environmental cause poor quality.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"single-year","dir":"Articles","previous_headings":"Classification","what":"Single Year","title":"User Guide","text":"option undertakes status classifications spring autumn single year. difference classification results run one years’ spring summer data using single year multi-year option. However, slight difference headers output file. Single-year option also calculates single season classifications. Single season classification intended investigative work. unsuitable setting environmental quality objectives testing compliance . enter results season(s), RICT leave outputs missing season(s) empty.","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"multi-year","dir":"Articles","previous_headings":"Classification","what":"Multi-year","title":"User Guide","text":"multi-year option combines data spring autumn one years single classification site. limit number years’ data can combined. Therefore, multi-year option gives output combined years, individual year. slight difference headers multi-year classification output file compared single year, shown Section Description RICT classification output. difference classification results run one years’ spring summer data using single year multi-year experiment. slight differences way RICT estimates probabilities class multi-year classifications compared previous versions RICT. current RICT bases proportion simulated multi-year average EQR values falling status class, whereas RICT 1.0 used estimate “typical” (.e., average) -year variance within 3-year period observed values WHPT index allow 1 2 years missing data. Neither philosophically correct, explained Development History section.","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"probabilities-of-class","dir":"Articles","previous_headings":"Classification","what":"Probabilities of class","title":"User Guide","text":"Probabilities class indicate likelihood site belonging WFD status classes. Every site must belong one 5-classes, combination index season(s), probabilities always add-100%. estimates take account two types classification error: fact EQR exactly class boundary, maximum likelihood either classes immediately boundary 50%. Uncertainty caused sampling error (measured number studies site sampled different people time) laboratory error (bias value enter biological data). probabilities based frequency class indicated 10,000 Monte Carlo simulations. simulation includes random component distribution known bias sampling error. Remember sources error mentioned section, qualified, also contribute imprecision classification.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"minta-minimum-of-ntaxa-and-aspt","dir":"Articles","previous_headings":"Classification","what":"MINTA (Minimum of NTaxa and ASPT)","title":"User Guide","text":"official Water Framework Directive (WFD) status classification based data (Environmental Quality Ratios) WHPT ASPT WHPT NTaxa spring autumn. Data seasons combined taking average EQRs determining status classification. status classification indices combined taking worst class indicated two indices. MINTA determined probable classes index, combination probabilities class index. Understanding probabilities class determined MINTA often misunderstood, particularly outcome sometimes counter-intuitive caused users, including author, assume mistake. MINTA probabilities class calculated distribution probabilities individual indices. calculated separately, exactly way probabilities class individual indices, going back results 10,000 Monte Carlo simulations. MINTA probabilities based worst class indicated either ASPT NTaxa 10,000 Monte Carlo simulations. number simulations worst classes High, Good, Moderate, Poor Bad summed expressed percentages 10,000 simulations. process used determine probabilities class individual indices, time, simulation RICT considers class indicated index indicated worst class.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"interpreting-classification-output","dir":"Articles","previous_headings":"Classification","what":"Interpreting Classification Output","title":"User Guide","text":"Classification based observed data RIVPACS prediction, must consider imprecision interpreting classification results. must take account reliability predictions, see Section Interpreting RICT2 prediction output. Always check suitability code prediction results, based combination environmental input variables closely match RIVPACS end groups. Suitability quite different probability class, take suitability account. also consider environmental parameters exceed warning limit values judging reliability predictions therefore classification. Another factor quality input data: whether environmental data based true long-term averages estimate base biologist’s expert opinion. classification, quality observed biological data also important. partly reflected bias value, represents component sorting data handling error. also consider whether biologist collecting samples collected correctly, experienced anything made sampling difficult, high low flow, poor access site, damaged nets, declining light turbid water, recorded sample data. Always consider probabilities class base management decisions solely face value probable class. site objective quality Good classed Moderate less likely failed standard also reasonably high probability good better, may actually failed standard, whereas site classed Moderate high probabilities Poor Bad likely failed standard need management action much certain. Remember probabilities always behave intuitively, shown explanation MINTA preceding Section. Two examples illustrate result can counter-intuitive: Site probable class ASPT NTaxa , Good, MINTA indicated Moderate. Many simulations worst class indicated Moderate ASPT different simulations worst class indicated Moderate NTaxa. result, number simulations Moderate indicated ASPT NTaxa added together, came greater number individual index, hence Moderate probable MINTA class even though probable class indices individually Good. ’s uncommon MINTA probable class worse probable classes indicated either ASPT NTaxa separately. Site B probable class indicated ASPT NTaxa different, MINTA indicated even worse class. similar thing happened Site , extreme. simulations Bad indicated ASPT different simulations Bad indicated NTaxa, combined, simulations Bad according MINTA class. Site , probability MINTA class Good Moderate similar, Site B little difference probabilities MINTA class poor bad. indicates importance using probabilities class make decisions rather simply face value class even probable class.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"compare-results","dir":"Articles","previous_headings":"","what":"Compare Results","title":"User Guide","text":"Compare allows run comparison two sites site different dates. outputs consist ASPT & NTAXA EQRs difference statistics. Probabilities sites different, probabilities site class combination also given.","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"before-rict","dir":"Articles","previous_headings":"Development History","what":"Before RICT","title":"User Guide","text":"RICT available, RIVPACS III+, FORTRAN programme, ran locally, implemented RIVPACS III predictive models.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"rewrite-in-r","dir":"Articles","previous_headings":"Development History","what":"Rewrite in R","title":"User Guide","text":"first version RICT web application hosted SEPA. version written Oracle Express. RICT version 2 (RICT2) re-written R hosted Azure ML Studio. Re-writing R made accessible researchers ecologists modify customise. also makes software easier cheaper maintain. RICT version 3 hosted R code Github provide single web app replacing available Azure ML Studio .","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"changes-made","dir":"Articles","previous_headings":"Development History","what":"Changes Made","title":"User Guide","text":"RICT2 corrected several errors original RICT, particularly prediction classification programmes. , results RICT2 differ produced RICT. following errors discovered RICT corrected RICT2: • RICT inadvertently used ‘composite families’ version WHPT ASPT (.e. TL2 WHPT Score AbW, CompFam) rather ‘distinct families’ version (TL2 WHPT Score AbW, DistFam), although take account additional families included WHPT. composite families grouped together BMWP-score compliance current taxonomy time, outlined Maitland (1977), see Appendix • RICT adjust sample bias correctly calculation simulated EQI/EQR values WHPT ASPT • RICT suffered errors caused estimates probability class based WHPT ASPT adjusted sample bias differ independent estimates even error sample bias correction taken account. errors reported Clarke, R.T. & J. Davy-Bowker (2018) Testing old (2008-18) RICT predictions classification uncertainty using independent RIVPACS code new RIVPACS test data: Components 1-3. Report Environment Agency. Wareham, Freshwater Biological Association: pp 84 + preliminaries • addition, RICT used old table Biologists’ Assessment Values indicating RIVPACS reference sites complied WFD intercalibration screening criteria caused slight error conversion factors used determine EQRs. Results RICT2 checked independent programmes using test data. provides assurance errors previous versions RICT . difference way probabilities class estimated multi-year classifications. Multi-year site assessments RICT2 based averaging EQR available year, just status class average EQR years data available. proportion simulated multi-year average EQR values falling status class gives us estimated probability class. philosophically correct must less sure confidence class average EQR several years, data missing years, estimate . initial version RICT used estimate “typical” (.e. average) -year variance within 3-year period observed values WHPT index allow 1- 2-years missing data. also satisfactory site differ amount within 3-year period depending extent natural variation, extreme years /anthropogenic related stress. three advantages new approach multi-year classification used RICT2: multi-year site classification based just one year, get probabilities class done single year classification single year’s data. number years can combined limited, whereas original RICT, maximum limited three 3-year period. approach can used determine classifications based data multiple sites. RICT version 3 keeps changes.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"contributing","dir":"Articles","previous_headings":"","what":"Contributing","title":"User Guide","text":"RICT code available open-source R package available github. wish customise workflow run large datasets, may useful run code local machine. can download package Github purpose. contributing code, please see contributing guidelines.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"User Guide","text":"section describes common issues can cause tool fail.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"re-run","dir":"Articles","previous_headings":"Troubleshooting","what":"Re-run","title":"User Guide","text":"Sometimes, website can fail first time run . checking anything else, always reload, see runs second attempt. unexplained failures, possibly caused data transfer drop-somewhere along line, common causes app failing run.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"use-correct-validation-input-file","dir":"Articles","previous_headings":"Troubleshooting","what":"Use Correct Validation Input File","title":"User Guide","text":"Obtain latest input file RICT site. Ensure downloaded correct version input file.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"check-input-file-is-in-correct-format","dir":"Articles","previous_headings":"Troubleshooting","what":"Check Input File is in Correct Format","title":"User Guide","text":"entered data Excel (xls) file, input file must saved CSV (comma delimited) file format . formats processed RICT. formats may able uploaded tool may run.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"remove-empty-or-null-lines-within-input-file","dir":"Articles","previous_headings":"Troubleshooting","what":"Remove Empty or Null Lines Within Input File","title":"User Guide","text":"empty lines end input file may cause RICT fail. Ensure last line input file last site submitted. Blank lines, lines commas may cause RICT fail.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"remove-red-validation-fails-from-the-input-file","dir":"Articles","previous_headings":"Troubleshooting","what":"Remove Red Validation Fails from the Input File","title":"User Guide","text":"using validation spreadsheet cells values /tolerances/ranges show red spreadsheet. sites may fail whole run therefore remove sites input file.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"site-not-appearing-in-the-output","dir":"Articles","previous_headings":"Troubleshooting","what":"Site Not Appearing in the Output","title":"User Guide","text":"site included input file appearing output file, likely inputted data exceeds failure tolerances. Check validations output see case.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"errors","dir":"Articles","previous_headings":"Troubleshooting","what":"Errors","title":"User Guide","text":"Common error messages cause:","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"grid-reference-errors","dir":"Articles","previous_headings":"Troubleshooting","what":"Grid Reference Errors","title":"User Guide","text":"Incorrect grid references common cause problems, particularly sea. RICT uses grid references extract mean air temperature temperature range internal data file, temperature data RICT uses covers land. temperature data reach far sea, sites close coast can also fail. sites fail, use slightly inland grid reference. Leading zeroes may omitted CSV input file ignores , trailing zeroes must included. Eastings northings fully numerical grid references (without NGR letters) used.","code":""},{"path":"https://aquametrics.github.io/rict/articles/user-guide.html","id":"rict-project-info","dir":"Articles","previous_headings":"Troubleshooting","what":"RICT Project Info","title":"User Guide","text":"RICT project website contains background documentation RICT. RICT site can accessed visiting: https://www.fba.org.uk/-scientific-collaborations/rivpacs--rict","code":""},{"path":"https://aquametrics.github.io/rict/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maybin Muyeba. Author. Tim Foster. Author. Tim Loveday. Maintainer, author.","code":""},{"path":"https://aquametrics.github.io/rict/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Muyeba M, Foster T, Loveday T (2023). rict: River Invertebrate Classification Tool (RICT). https://github.com/aquaMetrics/rict, https://aquametrics.github.io/rict/.","code":"@Manual{,   title = {rict: River Invertebrate Classification Tool (RICT)},   author = {Maybin Muyeba and Tim Foster and Tim Loveday},   year = {2023},   note = {https://github.com/aquaMetrics/rict, https://aquametrics.github.io/rict/}, }"},{"path":[]},{"path":"https://aquametrics.github.io/rict/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"River Invertebrate Classification Tool (RICT)","text":"R package calculating River Invertebrate Classification Tool (RICT) predictions","code":""},{"path":"https://aquametrics.github.io/rict/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"River Invertebrate Classification Tool (RICT)","text":"Install R also recommend installing Rstudio. Alternatively, use R Cloud browser. R console, install development version GitHub: Open interactive web app: run demo dataset rict function R get classification results: Use rict_predict calculate predictions: rict_classify classify predictions: See documentation usage details. example, change default year_type multi-year single year classification:","code":"install.packages(\"devtools\") library(devtools) install_github(\"aquaMetrics/rict\") library(rict) rict_app() results <- rict(demo_observed_values) predictions <- rict_predict(demo_observed_values) results <- rict_classify(predictions) results <- rict(demo_gis_values_log, year_type = \"single\")"},{"path":"https://aquametrics.github.io/rict/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"River Invertebrate Classification Tool (RICT)","text":"Please read Contributing Guidelines file details.","code":""},{"path":"https://aquametrics.github.io/rict/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"River Invertebrate Classification Tool (RICT)","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://aquametrics.github.io/rict/reference/compare_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Proportion of Results in each Class — compare_probability","title":"Compare Proportion of Results in each Class — compare_probability","text":"Compares proportion results '' falling different class results 'b'. Designed comparing simulated Environmental Quality Ratios (EQR). low-level function used higher-level rict_compare function compare EQRs two paired results.","code":""},{"path":"https://aquametrics.github.io/rict/reference/compare_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Proportion of Results in each Class — compare_probability","text":"","code":"compare_probability(   a = NULL,   b = NULL,   eqr_bands = c(0, 0.2, 0.4, 0.6, 0.8, 1),   cap_eqrs = TRUE,   labels = 5:1 )"},{"path":"https://aquametrics.github.io/rict/reference/compare_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Proportion of Results in each Class — compare_probability","text":"numeric list results '' b numeric list results 'b' eqr_bands Class boundaries default eqr_bands = c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0) cap_eqrs Optional TRUE/FALSE - default results capped 0-1 labels Optional List labels labelling class","code":""},{"path":"https://aquametrics.github.io/rict/reference/compare_probability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Proportion of Results in each Class — compare_probability","text":"returns dataframe","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/reference/compare_probability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Proportion of Results in each Class — compare_probability","text":"","code":"if (FALSE) { test <- compare_probability(   a = c(0.3, 0.4, 0.6),   b = c(1, 0.9, 0.6),   eqr_bands <- c(0, 0.47, 0.56, 0.68, 0.8, 1) ) }"},{"path":"https://aquametrics.github.io/rict/reference/compare_test.html","id":null,"dir":"Reference","previous_headings":"","what":"A Statistical Test to Compare Two Results — compare_test","title":"A Statistical Test to Compare Two Results — compare_test","text":"Statistics compare whether real difference EQR values paired results. low-level function used higher-level rict_compare function compare EQRs two paired results.","code":""},{"path":"https://aquametrics.github.io/rict/reference/compare_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Statistical Test to Compare Two Results — compare_test","text":"","code":"compare_test(a, b)"},{"path":"https://aquametrics.github.io/rict/reference/compare_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Statistical Test to Compare Two Results — compare_test","text":"numeric vector containing results '' b numeric vector constainng results 'b'","code":""},{"path":"https://aquametrics.github.io/rict/reference/compare_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Statistical Test to Compare Two Results — compare_test","text":"dataframe containing stats","code":""},{"path":"https://aquametrics.github.io/rict/reference/compare_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Statistical Test to Compare Two Results — compare_test","text":"","code":"if (FALSE) { test <- compare_test(   a = c(0.3, 0.4, 0.6),   b = c(1, 0.9, 0.6) ) }"},{"path":"https://aquametrics.github.io/rict/reference/demo_eqr_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo simulated eqr values for Model 1 test sites — demo_eqr_values","title":"Demo simulated eqr values for Model 1 test sites — demo_eqr_values","text":"dataset containing demo observed values. Stored .csv demo_eqr_values <- utils::read.csv(  system.file(\"extdat\",   \"model-m1-gb-10000-simulated-eqr-values-whpt-ntaxa-spring--test-sites.csv\",          package = \"rict\"), check.names = F)","code":""},{"path":"https://aquametrics.github.io/rict/reference/demo_eqr_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo simulated eqr values for Model 1 test sites — demo_eqr_values","text":"","code":"demo_eqr_values"},{"path":"https://aquametrics.github.io/rict/reference/demo_eqr_values.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demo simulated eqr values for Model 1 test sites — demo_eqr_values","text":"data frame 24 rows 2 variables: RESULT Result identifier Model 1 GB test site NTAXA EQR Simulated EQR values NTAXA SPR","code":""},{"path":"https://aquametrics.github.io/rict/reference/demo_eqr_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Demo simulated eqr values for Model 1 test sites — demo_eqr_values","text":"demo_eqr_values <-  purrr::map_df(names(demo_eqr_values), function(name)    eqrs <-  list(c(demo_eqr_values[, name]))   NTAXA <- list()   test <- rbind(NTAXA,eqrs)   eqrs <- data.frame(eqrs)   test <-  data.frame(     \"RESULT\" = name,     \"NTAXA EQR\" = test,     check.names = F) )","code":""},{"path":"https://aquametrics.github.io/rict/reference/demo_gis_values_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo observed values for gis model — demo_gis_values_log","title":"Demo observed values for gis model — demo_gis_values_log","text":"dataset containing demo observed log transformed gis values model 44. Stored .csv:","code":""},{"path":"https://aquametrics.github.io/rict/reference/demo_gis_values_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo observed values for gis model — demo_gis_values_log","text":"","code":"demo_gis_values_log"},{"path":"https://aquametrics.github.io/rict/reference/demo_gis_values_log.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demo observed values for gis model — demo_gis_values_log","text":"object class data.frame 24 rows 36 columns.","code":""},{"path":"https://aquametrics.github.io/rict/reference/demo_iom_observed_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo observed values for physical model for Isle of Man — demo_iom_observed_values","title":"Demo observed values for physical model for Isle of Man — demo_iom_observed_values","text":"dataset containing demo observed values. Stored .csv     demo_observed_values <- utils::read.csv(      system.file(\"extdat\", \"input-file-data--use-multi-year-iom.csv\",              package = \"rict\"), check.names = F)","code":""},{"path":"https://aquametrics.github.io/rict/reference/demo_iom_observed_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo observed values for physical model for Isle of Man — demo_iom_observed_values","text":"","code":"demo_iom_observed_values"},{"path":"https://aquametrics.github.io/rict/reference/demo_iom_observed_values.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demo observed values for physical model for Isle of Man — demo_iom_observed_values","text":"data frame 24 rows 33 variables: SITE Site identifier Waterbody Water body identifier Year Year sampling NGR National grid letters Easting Easting co-ordinate Northing Northing co-ordinate Altitude Altitude metres Slope Slope metres per km Dist_from_Source Distance Source km Alkalinity Hardness, Calcium concentration Electrical   conductivity can provided unable provide Alkalinity – One   values must present (spreadsheet validation) Hardness Can provided instead Alkalinity follows   validation rules (spreadsheet validation) Calcium Can provided   instead Alkalinity follows validation rules (spreadsheet   validation) Conductivity Can provided instead Alkalinity   follows validation rules (spreadsheet validation) Spr_Season_ID season ID Spr_TL2_WHPT_ASPT (AbW,DistFam) ASPT Spr_TL2_WHPT_NTaxa (AbW,DistFam) NTAXA Spr_Ntaxa_Bias bias Sum_Season_ID season ID Sum_TL2_WHPT_ASPT (AbW,DistFam) ASPT Sum_TL2_WHPT_NTaxa (AbW,DistFam) NTAXA Sum_Ntaxa_Bias bias Aut_Season_ID season ID Aut_TL2_WHPT_ASPT (AbW,DistFam) ASPT Aut_TL2_WHPT_NTaxa (AbW,DistFam) NTAXA Aut_Ntaxa_Bias bias","code":""},{"path":"https://aquametrics.github.io/rict/reference/demo_ni_observed_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo observed values for physical model in Northern Ireland — demo_ni_observed_values","title":"Demo observed values for physical model in Northern Ireland — demo_ni_observed_values","text":"dataset containing demo observed values. Stored .csv     demo_ni_observed_values <- utils::read.csv(      system.file(\"extdat\", \"ni-model-1-test-data.csv\",              package = \"rict\"), check.names = F)","code":""},{"path":"https://aquametrics.github.io/rict/reference/demo_ni_observed_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo observed values for physical model in Northern Ireland — demo_ni_observed_values","text":"","code":"demo_ni_observed_values"},{"path":"https://aquametrics.github.io/rict/reference/demo_ni_observed_values.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demo observed values for physical model in Northern Ireland — demo_ni_observed_values","text":"data frame 24 rows 33 variables: SITE Site identifier Waterbody Water body identifier Year Year sampling NGR National grid letters Easting Easting co-ordinate Northing Northing co-ordinate Altitude Altitude metres Slope Slope metres per km Discharge Discharge categories Velocity Velocity metres per second Dist_from_Source Distance Source km Mean_Width Mean Width metres Mean_Depth Mean Width metres Alkalinity Hardness, Calcium concentration Electrical   conductivity can provided unable provide Alkalinity – One   values must present (spreadsheet validation) Boulder_Cobbles Substrate Pebbles_Gravel Substrate Sand Substrate Silt_Clay Substrate Hardness Can provided instead Alkalinity follows   validation rules (spreadsheet validation) Calcium Can provided   instead Alkalinity follows validation rules (spreadsheet   validation) Conductivity Can provided instead Alkalinity   follows validation rules (spreadsheet validation) Spr_Season_ID season ID Spr_TL2_WHPT_ASPT (AbW,DistFam) ASPT Spr_TL2_WHPT_NTaxa (AbW,DistFam) NTAXA Spr_Ntaxa_Bias bias Sum_Season_ID season ID Sum_TL2_WHPT_ASPT (AbW,DistFam) ASPT Sum_TL2_WHPT_NTaxa (AbW,DistFam) NTAXA Sum_Ntaxa_Bias bias Aut_Season_ID season ID Aut_TL2_WHPT_ASPT (AbW,DistFam) ASPT Aut_TL2_WHPT_NTaxa (AbW,DistFam) NTAXA Aut_Ntaxa_Bias bias","code":""},{"path":"https://aquametrics.github.io/rict/reference/demo_observed_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo observed values for physical model in Great Britain — demo_observed_values","title":"Demo observed values for physical model in Great Britain — demo_observed_values","text":"dataset containing demo observed values. Stored .csv     demo_observed_values <- utils::read.csv(      system.file(\"extdat\", \"new-input-file-data--use-multi-year-1.csv\",              package = \"rict\"), check.names = F)","code":""},{"path":"https://aquametrics.github.io/rict/reference/demo_observed_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo observed values for physical model in Great Britain — demo_observed_values","text":"","code":"demo_observed_values"},{"path":"https://aquametrics.github.io/rict/reference/demo_observed_values.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demo observed values for physical model in Great Britain — demo_observed_values","text":"data frame 24 rows 33 variables: SITE Site identifier Waterbody Water body identifier Year Year sampling NGR National grid letters Easting Easting co-ordinate Northing Northing co-ordinate Altitude Altitude metres Slope Slope metres per km Discharge Discharge categories Velocity Velocity metres per second Dist_from_Source Distance Source km Mean_Width Mean Width metres Mean_Depth Mean Width metres Alkalinity Hardness, Calcium concentration Electrical   conductivity can provided unable provide Alkalinity – One   values must present (spreadsheet validation) Boulder_Cobbles Substrate Pebbles_Gravel Substrate Sand Substrate Silt_Clay Substrate Hardness Can provided instead Alkalinity follows   validation rules (spreadsheet validation) Calcium Can provided   instead Alkalinity follows validation rules (spreadsheet   validation) Conductivity Can provided instead Alkalinity   follows validation rules (spreadsheet validation) Spr_Season_ID season ID Spr_TL2_WHPT_ASPT (AbW,DistFam) ASPT Spr_TL2_WHPT_NTaxa (AbW,DistFam) NTAXA Spr_Ntaxa_Bias bias Sum_Season_ID season ID Sum_TL2_WHPT_ASPT (AbW,DistFam) ASPT Sum_TL2_WHPT_NTaxa (AbW,DistFam) NTAXA Sum_Ntaxa_Bias bias Aut_Season_ID season ID Aut_TL2_WHPT_ASPT (AbW,DistFam) ASPT Aut_TL2_WHPT_NTaxa (AbW,DistFam) NTAXA Aut_Ntaxa_Bias bias","code":""},{"path":"https://aquametrics.github.io/rict/reference/osg_parse.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts OS Grid Reference to BNG/WGS coordinates. — osg_parse","title":"Converts OS Grid Reference to BNG/WGS coordinates. — osg_parse","text":"function converts Ordnance Survey (OS) grid reference easting/northing latitude/longitude coordinates.","code":""},{"path":"https://aquametrics.github.io/rict/reference/osg_parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts OS Grid Reference to BNG/WGS coordinates. — osg_parse","text":"","code":"osg_parse(grid_refs, coord_system = c(\"BNG\", \"WGS84\"))"},{"path":"https://aquametrics.github.io/rict/reference/osg_parse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts OS Grid Reference to BNG/WGS coordinates. — osg_parse","text":"grid_refs string (character vector) contains OS grid Reference. coord_system default, \"BNG\" stands British National Grids. option set coord_system = \"WGS84\", returns latitude/longitude coordinates (info can found https://www.epsg-registry.org/).","code":""},{"path":"https://aquametrics.github.io/rict/reference/osg_parse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts OS Grid Reference to BNG/WGS coordinates. — osg_parse","text":"vector made two elements: easting northing (default) latitude longitude coordinates.","code":""},{"path":"https://aquametrics.github.io/rict/reference/osg_parse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Converts OS Grid Reference to BNG/WGS coordinates. — osg_parse","text":"function taken rnrfa package licenced GPL-3. Using avoids direct dependency rgdal package.","code":""},{"path":"https://aquametrics.github.io/rict/reference/osg_parse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Converts OS Grid Reference to BNG/WGS coordinates. — osg_parse","text":"Claudia Vitolo","code":""},{"path":"https://aquametrics.github.io/rict/reference/osg_parse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts OS Grid Reference to BNG/WGS coordinates. — osg_parse","text":"","code":"if (FALSE) { # single entry osg_parse(grid_refs = \"TQ722213\")  # multiple entries osg_parse(grid_refs = c(\"SN831869\", \"SN829838\")) }  # Begin Exclude Linting"},{"path":"https://aquametrics.github.io/rict/reference/rict.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the River Invertebrate Classification Tool (RICT) — rict","title":"Run the River Invertebrate Classification Tool (RICT) — rict","text":"rict function classifies observed environmental values.","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the River Invertebrate Classification Tool (RICT) — rict","text":"","code":"rict(   data = NULL,   year_type = \"multi\",   store_eqrs = FALSE,   area = NULL,   crs = NULL,   seed = TRUE )"},{"path":"https://aquametrics.github.io/rict/reference/rict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the River Invertebrate Classification Tool (RICT) — rict","text":"data Dataframe observed environmental values example input  data see demo_observed_values  demo_gis_values_log. SITE Site identifier Waterbody Water body identifier ... ... year_type \"single\" \"multi\" depending multi-year classification required - default \"multi\". store_eqrs TRUE/FALSE set TRUE function return simulate EQRs. area Area detected default NGR, can provide area parameter either 'iom', 'gb, 'ni' testing purposes. crs optionally set crs `29903` Irish projection system. seed Use seed setup RICT2 Azure default, useful testing .","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the River Invertebrate Classification Tool (RICT) — rict","text":"Dataframe classification results (simulated EQRs store_eqrs   = TRUE).","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/reference/rict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the River Invertebrate Classification Tool (RICT) — rict","text":"","code":"if (FALSE) { results <- rict(demo_observed_values) }"},{"path":"https://aquametrics.github.io/rict/reference/rict_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Open RICT web app — rict_app","title":"Open RICT web app — rict_app","text":"Open RICT interactive shiny web app.","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open RICT web app — rict_app","text":"","code":"rict_app()"},{"path":"https://aquametrics.github.io/rict/reference/rict_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Open RICT web app — rict_app","text":"rict_app() opens RICT interactive shiny app. RICT automatically detect input file contains NI GB grid references apply correct model including GIS / geological predictors used (currently available GB). Using app: Select required year type (multi/single) classification  type prediction instance include taxa indices. Click Browse .csv file button select upload data file. View download results.","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open RICT web app — rict_app","text":"","code":"if (FALSE) { rict_app() }"},{"path":"https://aquametrics.github.io/rict/reference/rict_classify.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate classification — rict_classify","title":"Calculate classification — rict_classify","text":"Calculate classification","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict_classify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate classification — rict_classify","text":"","code":"rict_classify(   data = NULL,   year_type = \"multi\",   store_eqrs = FALSE,   n_runs = 10000,   seed = TRUE,   set_seed = c(1234, 1234, 1234) )"},{"path":"https://aquametrics.github.io/rict/reference/rict_classify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate classification — rict_classify","text":"data Dataframe predicted endgroups values rict_predict function year_type \"single\" \"multi\" depending multi-year classification required - default \"multi\" store_eqrs Boolean signal simulate EQRs stored. TRUE, EQRs stored allowing `rict_compare` compare EQR results n_runs Number simulations, default 10000. seed Use seed setup RICT2 Azure, useful testing . set_seed Change set-seed number default '1234'. testing purposes .","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict_classify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate classification — rict_classify","text":"Dataframe classification results","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/reference/rict_classify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate classification — rict_classify","text":"","code":"if (FALSE) { predictions <- rict_predict(demo_observed_values) classifications <- rict_classify(predictions) }"},{"path":"https://aquametrics.github.io/rict/reference/rict_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare the Statistical Differences between Classifications Results — rict_compare","title":"Compare the Statistical Differences between Classifications Results — rict_compare","text":"`rict_compare` function allows user assess whether real difference EQR values /status class pair results /sites /time periods.","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare the Statistical Differences between Classifications Results — rict_compare","text":"","code":"rict_compare(results_a = NULL, results_b = NULL)"},{"path":"https://aquametrics.github.io/rict/reference/rict_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare the Statistical Differences between Classifications Results — rict_compare","text":"results_a Dataframe output `rict(store_eqrs = T)`. `results_b` `results_b` input  dataframes must number rows results_b Dataframe output `rict(store_eqrs = T)`. `results_b` `results_b` input  dataframes must number rows","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare the Statistical Differences between Classifications Results — rict_compare","text":"Dataframe compare results 44 variables see `technical specifications` details. Returns output results length input files. EQR metric compared EQR metric Result compared   (\"Vs\") metric Result B example SUM_ASPT Vs SUM_ASPT - row   comparing Summer ASPT results Summer ASPT results B. Note,   one season calculated, \"AVG_\"... EQR metric (average)   value season EQR value Result Concatennated results name Year Site Result B Concatennated results name Year Site Average EQR Result Average EQR Average EQR Result B Average EQR Average EQR: Difference (B - ) Difference EQR Standard Deviation Difference Standard Deviation Difference Lower 95% (L95) Difference Lower 95% (L95) Difference Upper 95% (U95) Difference Upper 95% (U95) Difference 2-sided test probability p difference EQR p probability test Probable Class Result Probable Class Result Probability likely class Result Probability likely class Result Probable Class Result B Probable Class Result B Probability likely class Result B Probability likely class Result B Probability B one class Worse Probability B one class Worse Probability B one class Worse Probability B one class Worse Probability B Class Probability B Class Probability B one class Better Probability B one class Better Probability B one class Better Probability B one class Better Probability Result High & Result B High Probability... Probability Result High & Result B Good Probability... Probability Result High & Result B Moderate Probability... Probability Result High & Result B Poor Probability... Probability Result High & Result B Bad Probability... Probability Result Good & Result B High Probability... Probability Result Good & Result B Good ... Probability Result Good & Result B Moderate ... Probability Result Good & Result B Poor ... Probability Result Good & Result B Bad ... Probability Result Moderate & Result B High ... Probability Result Moderate & Result B Good ... Probability Result Moderate & Result B Moderate ... Probability Result Moderate & Result B Poor ... Probability Result Moderate & Result B Bad ... Probability Result Poor & Result B High ... Probability Result Poor & Result B Good ... Probability Result Poor & Result B Moderate ... Probability Result Poor & Result B Poor ... Probability Result Poor & Result B Bad ... Probability Result Bad & Result B High ... Probability Result Bad & Result B Good ... Probability Result Bad & Result B Moderate ... Probability Result Bad & Result B Poor ... Probability Result Bad & Result B Bad ...","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict_compare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare the Statistical Differences between Classifications Results — rict_compare","text":"`rict_compare` makes use two lower level functions: compare_test compare_probability. passing data functions formats data removes results example 'MINTA' values applicable `compare_test()`.","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare the Statistical Differences between Classifications Results — rict_compare","text":"","code":"if (FALSE) { results_a <- rict(demo_observed_values[1, ], store_eqrs = TRUE, year_type = \"single\") results_b <- rict(demo_gis_values_log[2, ], store_eqrs = TRUE, year_type = \"single\") compare <- rict_compare(results_a, results_b) }"},{"path":"https://aquametrics.github.io/rict/reference/rict_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate River Invertebrate Classification Tool (RICT) predictions — rict_predict","title":"Calculate River Invertebrate Classification Tool (RICT) predictions — rict_predict","text":"Calculate River Invertebrate Classification Tool (RICT) predictions","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate River Invertebrate Classification Tool (RICT) predictions — rict_predict","text":"","code":"rict_predict(   data = NULL,   all_indices = FALSE,   taxa = FALSE,   taxa_list = c(\"TL1\", \"TL2\", \"TL3\", \"TL4\", \"TL5\"),   rows = NULL,   area = NULL,   crs = NULL )"},{"path":"https://aquametrics.github.io/rict/reference/rict_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate River Invertebrate Classification Tool (RICT) predictions — rict_predict","text":"data Dataframe predictive environmental values - variables   dependent input model 44, model 1, NI GB SITE Site reference number Waterbody Water body identifier LATITUDE Location point LONGITUDE Location point LOG.ALTITUDE Logarithmic value Altitude LOG.DISTANCE..SOURCE Logarithmic value Distance source LOG.WIDTH Logarithmic value Stream Width LOG.DEPTH Logarithmic value Stream Depth MEAN.SUBSTRATUM Calculated mean substratum DISCHARGE.CATEGORY Discharge category ALKALINITY Alkalinity LOG.ALKALINITY Logarithmic value Alkalinity LOG.SLOPE Logarithmic value Slope MEAN.AIR.TEMP Calculated Mean Air Temperature AIR.TEMP.RANGE Calculated Air Temperature Range p1 – p43 Calculated probability end group membership SuitCode Calculated Suitability code test site BelongsTo_endGrp Predicted probable end group test site belongs Indices... ...Predicted index value Indices SPR_SEASON_ID ID number season SPR_TL2_WHPT_ASPT (ABW,DISTFAM) Observed  value WHPT NTAXA spring SPR_TL2_WHPT_NTAXA (ABW,DISTFAM) Observed value WHPT ASPT spring SPR_NTAXA_BIAS Bias value used SUM_SEASON_ID Summary ID SUM_TL2_WHPT_ASPT (ABW,DISTFAM) Observed value WHPT ASPT summer SUM_TL2_WHPT_NTAXA (ABW,DISTFAM) Observed value WHPT NTAXA summer SUM_NTAXA_BIAS Bias value used AUT_SEASON_ID Aut ID AUT_TL2_WHPT_ASPT (ABW,DISTFAM) Observed value WHPT ASPT autumn AUT_TL2_WHPT_NTAXA (ABW,DISTFAM) Observed value WHPT NTAXA autumn AUT_NTAXA_BIAS Bias value used Area_CEH  AltBar_CEH  Alt_CEH  DFS_CEH  Slope_CEH  QCat_CEH  Peat_CEH  Chalk_O1_CEH  Clay_O1_CEH  Hardrock_O1_CEH  Limestone_O1_CEH  area ni gb all_indices Boolean - Return indices output (default returns WHPT indices). taxa Boolean - Return taxa predictions (default  returns indices). taxa_list Vector taxa lists predict default lists .e. c(\"TL1\", \"TL2\", \"TL3\", \"TL4\", \"TL5\"). rows Number (integer) rows (one site per row) predict taxa. Default rows. area Area detected default NGR, can provide area parameter either 'iom', 'gb, 'ni' testing purposes. crs optionally set crs `29903` Irish projection system.","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate River Invertebrate Classification Tool (RICT) predictions — rict_predict","text":"Dataframe predicted biotic scores probability observed   values falling statistical grouping rivers.","code":""},{"path":[]},{"path":"https://aquametrics.github.io/rict/reference/rict_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate River Invertebrate Classification Tool (RICT) predictions — rict_predict","text":"","code":"if (FALSE) { predictions <- rict_predict(demo_observed_values) }"},{"path":"https://aquametrics.github.io/rict/reference/rict_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate observed values — rict_validate","title":"Validate observed values — rict_validate","text":"Low level function validate input `data`. Returns list dataframes containing fails/warnings/replacements passing observed values. function detects model (gis physical) area (GB & NI) applies validation rules required. summary checks: Input 'data' exists. Input dataframe. Required columns present. Columns correct class. Conditional columns present correct class. multiple classes allowed, convert columns  standardised class example integer numeric. Assess model 'gis' (model 44) 'physical' (model 1) based  input columns. Assess input 'gb' 'ni' based grid reference. Additional columns/variables calculated example mean temperate. Logs failures warnings applied using `validation_rules` table. Replace values input values zero (close zero) avoid  log10(0) related errors. Returns dataframe passing values, notes warnings, fails,  replacements. model area parameters.","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate observed values — rict_validate","text":"","code":"rict_validate(   data = NULL,   row = FALSE,   stop_if_all_fail = TRUE,   area = NULL,   crs = NULL )"},{"path":"https://aquametrics.github.io/rict/reference/rict_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate observed values — rict_validate","text":"data dataframe observed environmental variables SITE Site identifier Waterbody Water body identifier row Boolean - set `TRUE` returns row number input file (data) check. makes linking checks (fails/warns etc) associated row input data easier. relevant multiple samples site year input separate row `rict_validate`. case, SITE YEAR enough link validation checks specific rows input data. stop_if_all_fail Boolean - set `FALSE` validation function return empty dataframe valid `data`. useful want run validation checks without stopping process. area Area detected default NGR, can provide area parameter either 'iom', 'gb, 'ni' testing purposes. crs optionally set crs `29903` Irish projection system.","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate observed values — rict_validate","text":"List dataframes parameters: data Dataframe input data passes validation rules checks Dataframe listing fails, warnings replacements model Returns model detected based columns input file area Returns area detected base don Grid Reference input file","code":""},{"path":"https://aquametrics.github.io/rict/reference/rict_validate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate observed values — rict_validate","text":"","code":"if (FALSE) { validations <- rict_validate(demo_observed_values, row = TRUE) }"}]
